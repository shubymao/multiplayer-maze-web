{"version":3,"sources":["components/button.tsx","components/canvas.tsx","type.ts","components/container.tsx","components/label-input.tsx","constants.ts","components/nav.tsx","lib/direction-util.ts","lib/maze-generator.ts","lib/misc-util.ts","lib/canvas-manager.ts","pages/generation-demo.tsx","components/joy-stick.tsx","lib/game.ts","pages/offline-maze.tsx","lib/multiplayer-game.ts","pages/multiplayer-maze.tsx","App.tsx","index.tsx"],"names":["Button","props","onClick","stl","hoverStl","label","className","type","Canvas","React","forwardRef","ref","size","onKeyUp","onKeyDown","width","height","defaultProps","Direction","Container","children","tabIndex","role","LabelInput","value","onChange","FIREBASE_CONFIG","apiKey","process","authDomain","databaseURL","storageBucket","TOAST_CONFIG","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","KEY_MAP","ArrowLeft","LEFT","a","A","ArrowUp","TOP","w","W","ArrowRight","RIGHT","d","D","ArrowDown","DOWN","s","S","INSTRUCTION","IDLE_CONTROL","magnitude","angle","ID_CHARSET","PLAYER_RADIUS_TO_CELL_RATIO","START_POS","r","c","DEFAULT_PLAYER_COLOR","LINKS","name","url","Nav","items","map","item","charAt","to","href","ALL_DIRS_ARR","getOPDir","dir","hasDirection","cell","removeDir","dirCombo","getControlFromDir","dx","dy","Math","atan2","maze","seen","START_CORD","globalSeed","random","breakWall","grid","cord","create2DArray","val","Array","fill","setSeed","inputSeed","rand","x","sin","floor","getDirs","dirs","arr","i","length","ind","temp","shuffle","getNextCord","delta","getDirCordOffset","Error","isOutOfBound","isVisited","visit","depthFirstSearch","update","nextCord","depthFirstSearchSync","generateMaze","params","userSeed","onUpdate","generateMazeSync","getCanvasSize","bigScreen","midScreen","getContext","canvas","ctx","getOnKey","keyDirs","control","event","key","preventDefault","current","addDir","getOffKey","getOnStick","ctrl","getOffStick","generatePlayer","pid","id","len","result","charSetLen","index","push","join","generateRandomID","location","randomColorFromString","str","rgb","toString","toUpperCase","substring","intToRGB","hash","charCodeAt","hashCode","TWO_PI","PI","sleep","ms","Promise","resolve","setTimeout","getOnUpdate","canvasManager","delay","cm","drawGrid","drawIndicatorSquare","CanvasManager","padX","padY","gridSize","cellSize","playerRadius","clearCanvas","clearRect","reduce","prev","row","isValidGrid","initDimension","drawBoundary","drawCell","fillStyle","drawSquare","drawStartFinish","drawPlayer","color","lineWidth","drawCircle","stroke","min","radius","beginPath","cCord","y","rCord","arc","closePath","moveTo","lineTo","strokeStyle","drawWall","this","handleChange","callBack","check","target","parseInt","GenerationDemo","canvasRef","createRef","useState","setSize","setDelay","seed","busy","setIsBusy","useMediaQuery","query","canvasSize","setCanvasSize","useEffect","updateSize","n","updateDelay","updateSeed","JOY_STICK_CONFIG","threshold","top","left","mode","dynamicPage","JoyStick","onEventHandler","onStick","offEventHandler","offStick","myContainer","manager","useRef","onEvent","useCallback","evt","data","distance","radian","config","zone","nipplejs","create","on","off","destroy","style","Game","level","player","opPositions","getMaze","getMyPlayer","setOpponentsPos","positions","performMove","nr","nc","cos","getBoundedCord","renderGame","refreshContext","forEach","pos","checkWin","dr","abs","dc","tr","tc","max","MARGIN","OfflineMaze","setLevel","game","animationRef","onKey","offKey","animate","toast","success","requestAnimationFrame","cancelAnimationFrame","MultiplayerGame","onGameOver","isWinner","myUID","lastUpdatedPosition","refMap","counter","realTimeDB","updateMyLocation","setNewSeed","render","cleanUp","removePlayer","initFirebaseService","firebase","apps","initializeApp","app","database","auth","signInAndInitListener","signInAnonymously","catch","onAuthStateChanged","user","uid","addSeedListener","addPlayersListener","path","seedRef","snapshot","initNewGame","set","newSeed","apiPath","addPlayerRef","onOtherPlayerJoin","removePlayerRef","onOtherPlayerLeave","newChild","playerId","playerRef","removedChild","delete","registerPlayer","remove","myPlayer","newPos","oldPos","Map","win","error","msg","MultiplayerMaze","gameRef","onLeave","window","addEventListener","createOnLeave","App","exact","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.76e574c3.chunk.js","sourcesContent":["import React, { MouseEventHandler } from 'react';\n\nexport interface ButtonProp {\n  onClick: MouseEventHandler<HTMLButtonElement>;\n  stl: string;\n  hoverStl?: string;\n  label: string;\n}\n\nconst Button = (props: ButtonProp): JSX.Element => {\n  const { onClick, stl, hoverStl, label } = props;\n  return (\n    <button\n      className={`p-3 focus:outline-none rounded-lg ${stl} ${hoverStl}`}\n      onClick={onClick}\n      type=\"submit\"\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { KeyboardEventHandler, LegacyRef } from 'react';\n\ninterface CanvasProps {\n  onKeyDown?: KeyboardEventHandler<HTMLCanvasElement>;\n  onKeyUp?: KeyboardEventHandler<HTMLCanvasElement>;\n  size: number;\n}\n\nconst Canvas = React.forwardRef(\n  (props: CanvasProps, ref: LegacyRef<HTMLCanvasElement>): JSX.Element => {\n    const { size, onKeyUp, onKeyDown } = props;\n    return (\n      <canvas\n        onKeyDown={onKeyDown}\n        onKeyUp={onKeyUp}\n        ref={ref}\n        width={size}\n        height={size}\n        className=\"bg-white\"\n      />\n    );\n  }\n);\n\nCanvas.defaultProps = {\n  onKeyDown: () => true,\n  onKeyUp: () => true\n};\n\nexport default Canvas;\n","import { KeyboardEventHandler, MutableRefObject } from 'react';\n\n// eslint-disable-next-line\nexport enum Direction {\n  TOP = 1, // 0001\n  RIGHT = 2, // 0010\n  DOWN = 4, // 0100\n  LEFT = 8 // 1000\n}\nexport type Link = { name: string; url: string };\nexport type Cell = number;\nexport type Cord = { r: number; c: number };\nexport type OnUpdate = (grid: Cell[][], cord: Cord) => Promise<void>;\nexport type Config = { userSeed?: number; onUpdate?: OnUpdate };\nexport type CanvasOrNull = HTMLCanvasElement | null;\nexport type Ctx = CanvasRenderingContext2D;\nexport type Control = { magnitude: number; angle: number };\nexport type Player = { id: string; location: Cord };\nexport type RRef<T> = MutableRefObject<T>;\nexport type KHandler<T> = KeyboardEventHandler<T>;\nexport type Context = { ctx: Ctx; width: number; height: number };\nexport type CallBack = (success?: boolean, message?: string) => void;\nexport interface StringMap {\n  [key: string]: number;\n}\n","import React, { FC, KeyboardEventHandler } from 'react';\n\nexport interface ContainerProps {\n  onKeyDown?: KeyboardEventHandler<HTMLDivElement>;\n  onKeyUp?: KeyboardEventHandler<HTMLDivElement>;\n  children: JSX.Element | Array<JSX.Element>;\n}\n\nconst Container: FC<ContainerProps> = (props: ContainerProps) => {\n  const { children, onKeyDown, onKeyUp } = props;\n  return (\n    <div\n      tabIndex={0}\n      role=\"button\"\n      onKeyDown={onKeyDown}\n      onKeyUp={onKeyUp}\n      className=\"w-full cursor-default min-h-screen bg-gray-700\"\n    >\n      <div className=\"space-y-4 flex flex-col text-center items-center p-5 text-white\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Container;\n","import React, { ChangeEventHandler } from 'react';\n\ninterface LabelInputProp {\n  value: string | number;\n  onChange: ChangeEventHandler<HTMLInputElement>;\n  label: string;\n}\n\nconst LabelInput = (props: LabelInputProp): JSX.Element => {\n  const { value, onChange, label } = props;\n  return (\n    <div className=\"flex flex-col text-black items-center\">\n      <p className=\"inline-block text-white text-lg\">{label}</p>\n      <input\n        className=\"w-16 text-center bg-gray-200 focus:bg-white\"\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default LabelInput;\n","import { ToastPosition } from 'react-toastify';\nimport { Control, Cord, Direction, Link, StringMap } from './type';\n\nconst LINKS: Array<Link> = [\n  { name: 'Home', url: 'https://shuby-mao.web.app/' },\n  { name: 'Project Page', url: 'https://shuby-mao.web.app/projects/web-multiplayer-maze' },\n  { name: 'Multiplayer Maze', url: '/' },\n  { name: 'Offline Maze', url: '/offline' },\n  { name: 'Generation Demo', url: '/generation-demo' }\n];\n\nexport const FIREBASE_CONFIG = {\n  apiKey: process.env.REACT_APP_firebase_apiKey,\n  authDomain: process.env.REACT_APP_firebase_authDomain,\n  databaseURL: process.env.REACT_APP_firebase_databaseURL,\n  storageBucket: process.env.REACT_APP_firebase_storageBucket\n};\n\nconst position: ToastPosition = 'top-right';\n\nexport const TOAST_CONFIG = {\n  position,\n  autoClose: 5000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined\n};\n\nexport const KEY_MAP: StringMap = {\n  ArrowLeft: Direction.LEFT,\n  a: Direction.LEFT,\n  A: Direction.LEFT,\n  ArrowUp: Direction.TOP,\n  w: Direction.TOP,\n  W: Direction.TOP,\n  ArrowRight: Direction.RIGHT,\n  d: Direction.RIGHT,\n  D: Direction.RIGHT,\n  ArrowDown: Direction.DOWN,\n  s: Direction.DOWN,\n  S: Direction.DOWN\n};\nexport const INSTRUCTION =\n  'Control: w,a,s,d or ↑,←,↓,→. Use on-screen joystick on a touch screen device.';\nexport const IDLE_CONTROL: Control = { magnitude: 0, angle: 0 };\nexport const ID_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nexport const ID_LEN = 10;\nexport const PLAYER_RADIUS_TO_CELL_RATIO = 0.15;\nexport const MAX_SPEED = 0.05;\nexport const START_POS: Cord = { r: 0.5, c: 0.5 };\nexport const GRID_PADDING = 5;\nexport const START_COLOR = '#DC2626';\nexport const END_COLOR = '#10B981';\nexport const BORDER_COLOR = '#000000';\nexport const INDICATOR_COLOR = '#FF0000';\nexport const DEFAULT_PLAYER_COLOR = '#FBBF24';\n\nexport default LINKS;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport LINKS from '../constants';\n\nconst Nav: FC = () => {\n  const items = LINKS;\n  return (\n    <div className=\"flex justify-center flex-wrap space-x-5 space-y-2 text-white\">\n      {items.map((item) => {\n        return item.url.charAt(0) === '/' ? (\n          <Link className=\"hover:text-green-500\" key={item.name} to={item.url}>\n            {item.name}\n          </Link>\n        ) : (\n          <a href={item.url} key={item.name} className=\"hover:text-green-500\">\n            {item.name}\n          </a>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Nav;\n","import { IDLE_CONTROL } from '../constants';\nimport { Cell, Control, Direction } from '../type';\n\nexport const ALL_DIRS_ARR = [Direction.TOP, Direction.RIGHT, Direction.DOWN, Direction.LEFT];\nexport const ALL_DIRS_CELL = 15; // 1111\n\nexport function getOPDir(dir: Direction): Direction {\n  if (dir === Direction.TOP) return Direction.DOWN;\n  if (dir === Direction.RIGHT) return Direction.LEFT;\n  if (dir === Direction.DOWN) return Direction.TOP;\n  return Direction.RIGHT;\n}\n\nexport function getDirCordOffset(dir: Direction): number[] {\n  if (dir === Direction.TOP) return [-1, 0];\n  if (dir === Direction.RIGHT) return [0, 1];\n  if (dir === Direction.DOWN) return [1, 0];\n  return [0, -1];\n}\n\nexport function hasDirection(cell: Cell, dir: Direction): boolean {\n  const hasDir = (cell & dir) !== 0;\n  return hasDir;\n}\n\nexport function removeDir(dirCombo: number, dir: Direction): number {\n  if (hasDirection(dirCombo, dir)) return dirCombo ^ dir;\n  return dirCombo;\n}\n\nexport function addDir(dirCombo: number, dir: Direction): number {\n  return dirCombo | dir;\n}\n\nexport default function getControlFromDir(dir: number): Control {\n  let [dx, dy] = [0, 0];\n  if (hasDirection(dir, Direction.TOP)) dy += 1;\n  if (hasDirection(dir, Direction.DOWN)) dy -= 1;\n  if (hasDirection(dir, Direction.RIGHT)) dx += 1;\n  if (hasDirection(dir, Direction.LEFT)) dx -= 1;\n  if (dy === 0 && dx === 0) return IDLE_CONTROL;\n  const angle = Math.atan2(dy, dx);\n  return { angle, magnitude: 1 };\n}\n","import { Cell, Cord, OnUpdate, Config, Direction } from '../type';\nimport { ALL_DIRS_CELL, getDirCordOffset, getOPDir, removeDir } from './direction-util';\n\nexport const START_CORD = { r: 0, c: 0 };\n\nlet globalSeed: number = Math.random() * 1e9;\nlet maze: Cell[][];\nlet seen: boolean[][];\n\nexport function isValidGrid(grid?: Cell[][]): boolean {\n  if (!grid) return false;\n  if (grid.length === 0) return false;\n  const size = grid.length;\n  const col = grid.reduce((prev, row) => {\n    if (!row || row.length !== prev) return -1;\n    return prev;\n  }, size);\n  if (col === -1) return false;\n  return true;\n}\n\nexport function breakWall(grid: Cell[][], cord: Cord, dir: Direction): void {\n  const { r, c } = cord;\n  grid[r][c] = removeDir(grid[r][c], dir);\n}\n\nexport function create2DArray<T>(size: number, val: T): T[][] {\n  const arr = new Array<Array<T>>(size);\n  return arr.fill([]).map(() => new Array<T>(size).fill(val));\n}\n\nexport function getRandomSeed(): number {\n  return Math.floor(Math.random() * 100000);\n}\n\nfunction setSeed(inputSeed?: number) {\n  if (inputSeed) globalSeed = inputSeed;\n  else globalSeed = Math.random() * 1e9;\n}\n\nexport function rand(): number {\n  if (!globalSeed) return Math.random();\n  const x = Math.sin(globalSeed) * 100000;\n  globalSeed++;\n  return x - Math.floor(x);\n}\n\nexport function shuffle<T>(arr: T[]): void {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const ind = Math.floor(rand() * (i + 1));\n    const temp = arr[i];\n    arr[i] = arr[ind];\n    arr[ind] = temp;\n  }\n}\n\nexport function getDirs(): Direction[] {\n  const dirs = [Direction.TOP, Direction.RIGHT, Direction.DOWN, Direction.LEFT];\n  shuffle(dirs);\n  return dirs;\n}\n\nexport function getNextCord(cord: Cord, dir: Direction): Cord {\n  const delta = getDirCordOffset(dir);\n  if (!delta) throw new Error('Delta not found.');\n  return { r: cord.r + delta[0], c: cord.c + delta[1] };\n}\n\nexport function isOutOfBound(grid: Cell[][], cord: Cord): boolean {\n  const { r, c } = cord;\n  if (r < 0 || c < 0 || r >= grid.length || c >= grid[0].length) return true;\n  return false;\n}\n\nexport function isVisited(cord: Cord): boolean {\n  const { r, c } = cord;\n  return seen[r][c];\n}\n\nexport function visit(cord: Cord): void {\n  const { r, c } = cord;\n  seen[r][c] = true;\n}\n\nasync function depthFirstSearch(cord: Cord, update?: OnUpdate): Promise<void> {\n  const dirs = getDirs();\n  visit(cord);\n  if (update) await update(maze, cord);\n  for (const dir of dirs) {\n    const nextCord = getNextCord(cord, dir);\n    if (!isOutOfBound(maze, nextCord) && !isVisited(nextCord)) {\n      breakWall(maze, cord, dir);\n      breakWall(maze, nextCord, getOPDir(dir));\n      await depthFirstSearch(nextCord, update);\n    }\n  }\n}\n\nfunction depthFirstSearchSync(cord: Cord): void {\n  const dirs = getDirs();\n  visit(cord);\n  for (const dir of dirs) {\n    const nextCord = getNextCord(cord, dir);\n    if (!isOutOfBound(maze, nextCord) && !isVisited(nextCord)) {\n      breakWall(maze, cord, dir);\n      breakWall(maze, nextCord, getOPDir(dir));\n      depthFirstSearchSync(nextCord);\n    }\n  }\n}\n\nexport async function generateMaze(size: number, params: Config = {}): Promise<Cell[][]> {\n  const { userSeed, onUpdate } = params;\n  maze = create2DArray<Cell>(size, ALL_DIRS_CELL);\n  seen = create2DArray<boolean>(size, false);\n  setSeed(userSeed);\n  await depthFirstSearch(START_CORD, onUpdate);\n  return maze;\n}\n\nexport function generateMazeSync(size: number, userSeed?: number): Cell[][] {\n  maze = create2DArray<Cell>(size, ALL_DIRS_CELL);\n  seen = create2DArray<boolean>(size, false);\n  setSeed(userSeed);\n  depthFirstSearchSync(START_CORD);\n  return maze;\n}\n","import { IDLE_CONTROL, ID_CHARSET, ID_LEN, KEY_MAP } from '../constants';\nimport { CanvasOrNull, Context, Control, Cord, KHandler, Player, RRef } from '../type';\nimport getControlFromDir, { addDir, removeDir } from './direction-util';\n\nexport default function getCanvasSize(bigScreen: boolean, midScreen: boolean): number {\n  if (bigScreen) return 500;\n  if (midScreen) return 350;\n  return 250;\n}\n\nexport function getContext(canvas?: CanvasOrNull): Context {\n  if (!canvas) throw new Error('Canvas is not defined.');\n  const { height, width } = canvas;\n  const ctx = canvas.getContext('2d');\n  if (!ctx) throw new Error('Unable to get context.');\n  return { ctx, height, width };\n}\n\nexport const getOnKey = <T>(keyDirs: RRef<number>, control: RRef<Control>): KHandler<T> => {\n  const onKeyDown: KHandler<T> = (event) => {\n    const dir = KEY_MAP[event.key] || 0;\n    if (dir !== 0) event.preventDefault();\n    keyDirs.current = addDir(keyDirs.current, dir);\n    control.current = getControlFromDir(keyDirs.current);\n  };\n  return onKeyDown;\n};\n\nexport const getOffKey = <T>(keyDirs: RRef<number>, control: RRef<Control>): KHandler<T> => {\n  const onKeyUp: KHandler<T> = (event) => {\n    const dir = KEY_MAP[event.key] || 0;\n    if (dir !== 0) event.preventDefault();\n    keyDirs.current = removeDir(keyDirs.current, dir);\n    control.current = getControlFromDir(keyDirs.current);\n  };\n  return onKeyUp;\n};\n\nexport const getOnStick = (control: RRef<Control>) => {\n  return (ctrl: Control): void => {\n    control.current = ctrl;\n  };\n};\n\nexport const getOffStick = (control: RRef<Control>) => {\n  return (): void => {\n    control.current = IDLE_CONTROL;\n  };\n};\n\nfunction generateRandomID(len: number) {\n  const result = [];\n  const charSetLen = ID_CHARSET.length;\n  for (let i = 0; i < len; i++) {\n    const index = Math.floor(Math.random() * charSetLen);\n    result.push(ID_CHARSET.charAt(index));\n  }\n  return result.join('');\n}\n\nexport function generatePlayer(position: Cord, pid?: string): Player {\n  const id = pid || generateRandomID(ID_LEN);\n  const location = position;\n  return { id, location };\n}\n\nfunction hashCode(str: string) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\n\nfunction intToRGB(i: number) {\n  const c = (i & 0x00ffffff).toString(16).toUpperCase();\n  return '00000'.substring(0, 6 - c.length) + c;\n}\n\nexport function randomColorFromString(str: string): string {\n  const rgb = intToRGB(hashCode(str));\n  return `#${rgb}`;\n}\n","import { isValidGrid } from './maze-generator';\nimport { Direction, Cell, Cord, CanvasOrNull, Ctx, OnUpdate } from '../type';\nimport { hasDirection, ALL_DIRS_ARR } from './direction-util';\nimport {\n  BORDER_COLOR,\n  DEFAULT_PLAYER_COLOR,\n  END_COLOR,\n  GRID_PADDING,\n  INDICATOR_COLOR,\n  PLAYER_RADIUS_TO_CELL_RATIO,\n  START_COLOR\n} from '../constants';\nimport { getContext } from './misc-util';\n\nconst TWO_PI = 2 * Math.PI;\nconst DEFAULT_STOKE_WIDTH = 1;\nconst PLAYER_STOKE_WIDTH = 2;\nexport function sleep(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\nexport function getOnUpdate(canvasManager: CanvasManager, delay = 50): OnUpdate {\n  const cm = canvasManager;\n  return async (grid: Cell[][], cord: Cord) => {\n    cm.drawGrid(grid);\n    cm.drawIndicatorSquare(cord);\n    await sleep(delay);\n  };\n}\n\nexport default class CanvasManager {\n  private canvas: CanvasOrNull;\n\n  private ctx: Ctx;\n\n  private width: number;\n\n  private height: number;\n\n  private padX = 0;\n\n  private padY = 0;\n\n  private gridSize = -1;\n\n  private cellSize = -1;\n\n  private playerRadius = -1;\n\n  constructor(canvas: CanvasOrNull) {\n    this.canvas = canvas;\n    const { ctx, height, width } = getContext(this.canvas);\n    this.ctx = ctx;\n    this.width = width;\n    this.height = height;\n  }\n\n  public refreshContext(): void {\n    const { ctx, height, width } = getContext(this.canvas);\n    this.ctx = ctx;\n    this.width = width;\n    this.height = height;\n  }\n\n  public clearCanvas = (): void => {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n  };\n\n  public drawGrid = (grid?: Cell[][]): void => {\n    if (!grid || !isValidGrid(grid)) throw new Error('Grid not valid');\n    this.initDimension(this.width, this.height, grid);\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    this.drawBoundary();\n    for (let r = 0; r < grid.length; r++) {\n      for (let c = 0; c < grid[0].length; c++) {\n        this.drawCell(grid[r][c], { r, c });\n      }\n    }\n  };\n\n  public drawIndicatorSquare = (cord: Cord): void => {\n    this.ctx.fillStyle = INDICATOR_COLOR;\n    this.drawSquare(cord);\n    this.ctx.fill();\n  };\n\n  public drawStartFinish = (maze: number[][]): void => {\n    this.ctx.fillStyle = START_COLOR;\n    this.drawSquare({ r: 0, c: 0 });\n    this.ctx.fill();\n    this.ctx.fillStyle = END_COLOR;\n    this.drawSquare({ r: maze.length - 1, c: maze.length - 1 });\n    this.ctx.fill();\n  };\n\n  public drawPlayer = (cord: Cord, color: string = DEFAULT_PLAYER_COLOR): void => {\n    this.ctx.fillStyle = color;\n    this.ctx.lineWidth = PLAYER_STOKE_WIDTH;\n    this.drawCircle(cord, this.playerRadius);\n    this.ctx.fill();\n    this.ctx.stroke();\n  };\n\n  private initDimension = (width: number, height: number, grid: Cell[][]): void => {\n    this.gridSize = Math.min(width, height) - 2 * GRID_PADDING;\n    this.cellSize = this.gridSize / grid.length;\n    this.playerRadius = this.cellSize * PLAYER_RADIUS_TO_CELL_RATIO;\n    this.padY = (height - this.gridSize) / 2;\n    this.padX = (width - this.gridSize) / 2;\n  };\n\n  private drawCircle = (cord: Cord, radius: number): void => {\n    this.ctx.beginPath();\n    const x = this.cCord(cord.c);\n    const y = this.rCord(cord.r);\n    this.ctx.arc(x, y, radius, 0, TWO_PI);\n    this.ctx.closePath();\n  };\n\n  private drawSquare = (cord: Cord): void => {\n    const { r, c } = cord;\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.cCord(c) + 1, this.rCord(r) + 1);\n    this.ctx.lineTo(this.cCord(c + 1) - 1, this.rCord(r) + 1);\n    this.ctx.lineTo(this.cCord(c + 1) - 1, this.rCord(r + 1) - 1);\n    this.ctx.lineTo(this.cCord(c) + 1, this.rCord(r + 1) - 1);\n    this.ctx.closePath();\n  };\n\n  private rCord = (r: number) => {\n    return this.padY + r * this.cellSize;\n  };\n\n  private cCord = (c: number) => {\n    return this.padX + c * this.cellSize;\n  };\n\n  private drawBoundary = (): void => {\n    if (this.gridSize > 0) {\n      this.ctx.lineWidth = DEFAULT_STOKE_WIDTH;\n      this.ctx.strokeStyle = BORDER_COLOR;\n      this.ctx.beginPath();\n      this.ctx.moveTo(this.padX, this.padY);\n      this.ctx.lineTo(this.padX + this.gridSize, this.padY);\n      this.ctx.lineTo(this.padX + this.gridSize, this.padY + this.gridSize);\n      this.ctx.lineTo(this.padX, this.padY + this.gridSize);\n      this.ctx.closePath();\n      this.ctx.stroke();\n    }\n  };\n\n  private drawCell = (cell: Cell, cord: Cord): void => {\n    for (const dir of ALL_DIRS_ARR) {\n      if (hasDirection(cell, dir)) {\n        this.drawWall(cord, dir);\n      }\n    }\n  };\n\n  private drawWall = (cord: Cord, dir: Direction): void => {\n    const { r, c } = cord;\n    this.ctx.beginPath();\n    if (dir === Direction.TOP || dir === Direction.LEFT)\n      this.ctx.moveTo(this.cCord(c), this.rCord(r));\n    else this.ctx.moveTo(this.cCord(c + 1), this.rCord(r + 1));\n    if (dir === Direction.TOP || dir === Direction.RIGHT)\n      this.ctx.lineTo(this.cCord(c + 1), this.rCord(r));\n    else this.ctx.lineTo(this.cCord(c), this.rCord(r + 1));\n    this.ctx.closePath();\n    this.ctx.stroke();\n  };\n}\n","import React, { createRef, useEffect, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport Button from '../components/button';\nimport Canvas from '../components/canvas';\nimport Container from '../components/container';\nimport LabelInput from '../components/label-input';\nimport Nav from '../components/nav';\nimport CanvasManager, { getOnUpdate } from '../lib/canvas-manager';\nimport { generateMaze, getRandomSeed } from '../lib/maze-generator';\n\nfunction handleChange(callBack: React.Dispatch<string>, check: (nVal: number) => boolean) {\n  return (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    if (!value || check(parseInt(value, 10))) callBack(value);\n  };\n}\n\nfunction GenerationDemo(): JSX.Element {\n  const canvasRef: React.LegacyRef<HTMLCanvasElement> = createRef();\n\n  const [size, setSize] = useState('10');\n  const [delay, setDelay] = useState('30');\n  const [seed, setSeed] = useState(getRandomSeed().toString());\n  const [busy, setIsBusy] = useState(false);\n  const bigScreen = useMediaQuery({ query: '(min-width: 550px)' });\n  const [canvasSize, setCanvasSize] = useState(bigScreen ? 500 : 250);\n\n  useEffect(() => {\n    setCanvasSize(bigScreen ? 500 : 200);\n  }, [bigScreen]);\n\n  const onClick = async () => {\n    if (busy) return;\n    setIsBusy(true);\n    const canvas = canvasRef.current;\n    const canvasManager = new CanvasManager(canvas);\n    const onUpdate = getOnUpdate(canvasManager, parseInt(delay, 10));\n    const userSeed = parseInt(seed, 10);\n    const maze = await generateMaze(parseInt(size, 10), { onUpdate, userSeed });\n    canvasManager.drawGrid(maze);\n    setIsBusy(false);\n  };\n  const updateSize = handleChange(setSize, (n) => n <= 50);\n  const updateDelay = handleChange(setDelay, (d) => d < 400);\n  const updateSeed = handleChange(setSeed, (s) => s < 100000);\n\n  return (\n    <Container>\n      <Nav />\n      <h1 className=\"text-4xl\">Generation Demo</h1>\n      <Canvas ref={canvasRef} size={canvasSize} />\n      <div className=\"flex flex-wrap gap-3 items-center place-content-center\">\n        <LabelInput label=\"Size\" value={size} onChange={updateSize} />\n        <LabelInput label=\"Delay\" value={delay} onChange={updateDelay} />\n        <LabelInput label=\"Seed\" value={seed} onChange={updateSeed} />\n        <Button onClick={onClick} label=\"Generate\" stl=\"bg-green-500 hover:bg-green-400\" />\n      </div>\n    </Container>\n  );\n}\n\nexport default GenerationDemo;\n","import React, { createRef, useCallback, useEffect, useRef } from 'react';\nimport nipplejs, {\n  EventData,\n  JoystickManager,\n  JoystickManagerOptions,\n  JoystickOutputData\n} from 'nipplejs';\nimport { Control } from '../type';\n\nexport const JOY_STICK_CONFIG: JoystickManagerOptions = {\n  color: '#000000',\n  threshold: 0.1,\n  position: { top: '50%', left: '50%' },\n  mode: 'static',\n  dynamicPage: true\n};\n\nexport interface JoyStickProps {\n  size: number;\n  onStick: (control: Control) => void;\n  offStick: () => void;\n}\n\nconst JoyStick = (props: JoyStickProps): JSX.Element => {\n  const { size, onStick: onEventHandler, offStick: offEventHandler } = props;\n  const myContainer = createRef<HTMLDivElement>();\n  const manager = useRef<JoystickManager | null>(null);\n\n  const onEvent = useCallback(\n    (evt: EventData, data: JoystickOutputData): void => {\n      const control: Control = { magnitude: (data.distance / size) * 2, angle: data.angle.radian };\n      onEventHandler(control);\n    },\n    [onEventHandler, size]\n  );\n\n  useEffect(() => {\n    const config = JOY_STICK_CONFIG;\n    config.zone = myContainer.current as HTMLElement;\n    config.size = size;\n    manager.current = nipplejs.create(config);\n    manager.current.on('move', onEvent);\n    manager.current.on('end', offEventHandler);\n    return () => {\n      offEventHandler();\n      manager.current?.off('move', onEvent);\n      manager.current?.off('end', offEventHandler);\n      manager.current?.destroy();\n    };\n  }, [manager, size, onEvent, offEventHandler, myContainer]);\n\n  return (\n    <div\n      className=\"bg-white relative rounded-full\"\n      style={{ width: size + 5, height: size + 5 }}\n      ref={myContainer}\n    />\n  );\n};\n\nexport default JoyStick;\n","import CanvasManager from './canvas-manager';\nimport { generateMazeSync } from './maze-generator';\nimport { Cell, Cord, Direction, CanvasOrNull, Control, Player } from '../type';\nimport { hasDirection } from './direction-util';\nimport { generatePlayer, randomColorFromString } from './misc-util';\nimport { MAX_SPEED, PLAYER_RADIUS_TO_CELL_RATIO as MARGIN, START_POS } from '../constants';\n\nexport default class Game {\n  private canvasManager: CanvasManager;\n\n  private level: number;\n\n  private maze: Cell[][];\n\n  private gridSize: number;\n\n  private player: Player;\n\n  private opPositions?: Map<string, Cord>;\n\n  private seed?: number;\n\n  constructor(canvas: CanvasOrNull, level: number, seed?: number, pid?: string) {\n    this.seed = seed;\n    this.level = level;\n    this.gridSize = this.level + 5;\n    this.player = generatePlayer(START_POS, pid);\n    this.maze = generateMazeSync(this.gridSize, this.seed);\n    this.canvasManager = new CanvasManager(canvas);\n  }\n\n  public getMaze = (): Cell[][] => {\n    return this.maze;\n  };\n\n  public getMyPlayer = (): Player => {\n    return this.player;\n  };\n\n  public setOpponentsPos = (positions: Map<string, Cord>): void => {\n    this.opPositions = positions;\n  };\n\n  public performMove = (control: Control): void => {\n    const { magnitude, angle } = control;\n    let nr = this.player.location.r;\n    let nc = this.player.location.c;\n    nr += -MAX_SPEED * magnitude * Math.sin(angle);\n    nc += MAX_SPEED * magnitude * Math.cos(angle);\n    this.player.location = this.getBoundedCord(nr, nc);\n  };\n\n  public renderGame = (): void => {\n    this.canvasManager.refreshContext();\n    this.canvasManager.drawGrid(this.maze);\n    this.canvasManager.drawStartFinish(this.maze);\n    this.opPositions?.forEach((pos, id) =>\n      this.canvasManager.drawPlayer(pos, randomColorFromString(id))\n    );\n    const { location, id } = this.player;\n    this.canvasManager.drawPlayer(location, randomColorFromString(id));\n  };\n\n  public checkWin = (): boolean => {\n    const dr = Math.abs(this.player.location.r - (this.gridSize - 0.5));\n    const dc = Math.abs(this.player.location.c - (this.gridSize - 0.5));\n    return dr <= 0.5 && dc <= 0.5;\n  };\n\n  private getBoundedCord = (nr: number, nc: number): Cord => {\n    const { r, c } = this.player.location;\n    const [tr, tc] = [Math.floor(r), Math.floor(c)];\n    const cell = this.maze[tr][tc];\n    if (hasDirection(cell, Direction.TOP)) nr = Math.max(tr + MARGIN, nr);\n    if (hasDirection(cell, Direction.DOWN)) nr = Math.min(tr + 1 - MARGIN, nr);\n    if (hasDirection(cell, Direction.LEFT)) nc = Math.max(tc + MARGIN, nc);\n    if (hasDirection(cell, Direction.RIGHT)) nc = Math.min(tc + 1 - MARGIN, nc);\n    return { r: nr, c: nc };\n  };\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { toast } from 'react-toastify';\nimport Canvas from '../components/canvas';\nimport Container from '../components/container';\nimport JoyStick from '../components/joy-stick';\nimport Nav from '../components/nav';\nimport { IDLE_CONTROL, INSTRUCTION, TOAST_CONFIG } from '../constants';\nimport Game from '../lib/game';\nimport getCanvasSize, { getOffStick, getOnStick, getOnKey, getOffKey } from '../lib/misc-util';\nimport { Control } from '../type';\n\nfunction OfflineMaze(): JSX.Element {\n  const [level, setLevel] = useState(1);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const bigScreen = useMediaQuery({ query: '(min-width: 600px)' });\n  const midScreen = useMediaQuery({ query: '(min-width: 400px)' });\n  const [canvasSize, setCanvasSize] = useState(getCanvasSize(bigScreen, midScreen));\n  const game = useRef<Game>();\n  const animationRef = useRef(0);\n  const control = useRef<Control>(IDLE_CONTROL);\n  const keyDirs = useRef(0);\n  const onKey = getOnKey(keyDirs, control);\n  const offKey = getOffKey(keyDirs, control);\n  const onStick = getOnStick(control);\n  const offStick = getOffStick(control);\n\n  useEffect(() => {\n    setCanvasSize(getCanvasSize(bigScreen, midScreen));\n  }, [bigScreen, midScreen]);\n\n  const animate: FrameRequestCallback = useCallback(() => {\n    game.current?.performMove(control.current);\n    game.current?.renderGame();\n    if (game.current?.checkWin()) {\n      toast.success(`Reached Level ${level + 1}`, TOAST_CONFIG);\n      setLevel(level + 1);\n    }\n    animationRef.current = requestAnimationFrame(animate);\n  }, [control, game, level]);\n\n  useEffect(() => {\n    game.current = new Game(canvasRef.current, level);\n    animationRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(animationRef.current);\n  }, [level, animate]);\n\n  return (\n    <Container onKeyDown={onKey} onKeyUp={offKey}>\n      <Nav />\n      <h1 className=\"text-4xl my-4 text-center\">Offline Maze Level {level}</h1>\n      <p>{INSTRUCTION}</p>\n      <Canvas ref={canvasRef} size={canvasSize} />\n      <JoyStick size={100} offStick={offStick} onStick={onStick} />\n    </Container>\n  );\n}\n\nexport default OfflineMaze;\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport { FIREBASE_CONFIG } from '../constants';\nimport { CallBack, CanvasOrNull, Control, Cord, Player } from '../type';\nimport Game from './game';\n\nconst REFRESH_THRESHOLD = 3;\n\ntype Auth = firebase.auth.Auth;\ntype SnapShot = firebase.database.DataSnapshot;\ntype Reference = firebase.database.Reference;\n\nexport default class MultiplayerGame {\n  private isWinner: boolean;\n\n  private myUID?: string;\n\n  private lastUpdatedPosition?: Cord;\n\n  private opPositions: Map<string, Cord>;\n\n  private refMap: Map<string, Reference>;\n\n  private counter = 0;\n\n  private game!: Game;\n\n  private canvas: CanvasOrNull;\n\n  private realTimeDB!: firebase.database.Database;\n\n  private onGameOver?: CallBack;\n\n  private callBack?: CallBack;\n\n  constructor(canvas: CanvasOrNull, onGameOver?: CallBack, callBack?: CallBack) {\n    this.initFirebaseService();\n    this.isWinner = false;\n    this.canvas = canvas;\n    this.opPositions = new Map();\n    this.refMap = new Map();\n    this.onGameOver = onGameOver;\n    this.callBack = callBack;\n  }\n\n  public performMove = (control: Control): void => {\n    if (!this.game) return;\n    this.counter++;\n    this.game.performMove(control);\n    if (this.counter >= REFRESH_THRESHOLD) {\n      this.updateMyLocation();\n      this.counter = 0;\n    }\n    if (this.game.checkWin()) {\n      this.isWinner = true;\n      this.setNewSeed();\n    }\n  };\n\n  public render = (): void => {\n    this.game?.renderGame();\n  };\n\n  public cleanUp = (): void => {\n    if (this.game) this.removePlayer(this.game.getMyPlayer());\n    this.refMap.forEach((ref) => ref.off());\n  };\n\n  private initFirebaseService = () => {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(FIREBASE_CONFIG);\n    }\n    const app = firebase.app(); // if already initialized, use that one\n    this.realTimeDB = firebase.database(app);\n    const auth = firebase.auth(app);\n    this.signInAndInitListener(auth);\n  };\n\n  private signInAndInitListener = (auth: Auth) => {\n    auth.signInAnonymously().catch(() => {\n      if (this.callBack) this.callBack(false, 'Login failed. Please try refresh the page.');\n    });\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        if (this.callBack) this.callBack(true, `Login Success.`);\n        this.myUID = user.uid;\n        this.addSeedListener();\n        this.addPlayersListener();\n      }\n    });\n  };\n\n  private addSeedListener = () => {\n    const path = '/seed';\n    const seedRef = this.realTimeDB.ref(path);\n    seedRef.on('value', (snapshot) => {\n      const seed = snapshot.val();\n      if (this.game && this.onGameOver) {\n        this.onGameOver(this.isWinner);\n      }\n      this.initNewGame(seed);\n    });\n    this.refMap.set(path, seedRef);\n  };\n\n  private setNewSeed = () => {\n    const newSeed = Math.floor(Math.random() * 1000000);\n    this.realTimeDB.ref('/seed').set(newSeed);\n  };\n\n  private addPlayersListener = (): void => {\n    const apiPath = '/players';\n    const addPlayerRef = this.realTimeDB.ref(apiPath);\n    addPlayerRef.on('child_added', this.onOtherPlayerJoin);\n    this.refMap.set(`${apiPath}-added`, addPlayerRef);\n    const removePlayerRef = this.realTimeDB.ref('/players');\n    removePlayerRef.on('child_removed', this.onOtherPlayerLeave);\n    this.refMap.set(`${apiPath}-removed`, removePlayerRef);\n  };\n\n  private onOtherPlayerJoin = (newChild: SnapShot) => {\n    const playerId = newChild.key;\n    if (playerId && playerId !== this.game?.getMyPlayer().id) {\n      this.opPositions.set(playerId, newChild.val());\n      const apiPath = `/players/${playerId}`;\n      const playerRef = this.realTimeDB.ref(apiPath);\n      playerRef.on('value', (player) => {\n        this.opPositions.set(playerId, player.val());\n      });\n      this.refMap.set(apiPath, playerRef);\n    }\n  };\n\n  private onOtherPlayerLeave = (removedChild: SnapShot) => {\n    const playerId = removedChild.key;\n    if (playerId && playerId !== this.game?.getMyPlayer().id) {\n      const apiPath = `/players/${playerId}`;\n      this.opPositions.delete(playerId);\n      this.refMap.delete(apiPath);\n      this.realTimeDB.ref(apiPath).off();\n    }\n  };\n\n  private registerPlayer = (player: Player): void => {\n    this.realTimeDB.ref(`/players/${player.id}`).set(player.location);\n  };\n\n  private removePlayer = (player: Player): void => {\n    this.realTimeDB.ref(`/players/${player.id}`).remove();\n  };\n\n  private updateMyLocation = (): void => {\n    const myPlayer = this.game?.getMyPlayer();\n    if (!myPlayer) return;\n    const newPos = myPlayer.location;\n    const oldPos = this.lastUpdatedPosition;\n    if (!oldPos || newPos.c !== oldPos.c || newPos.r !== oldPos.r) {\n      this.realTimeDB.ref(`/players/${myPlayer.id}`).update(newPos);\n      this.lastUpdatedPosition = newPos;\n    }\n  };\n\n  private initNewGame = (seed: number) => {\n    this.game = new Game(this.canvas, 10, seed, this.myUID);\n    this.game.setOpponentsPos(this.opPositions);\n    const myPlayer = this.game.getMyPlayer();\n    if (myPlayer) this.registerPlayer(myPlayer);\n    this.isWinner = false;\n  };\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { toast } from 'react-toastify';\nimport Canvas from '../components/canvas';\nimport Container from '../components/container';\nimport JoyStick from '../components/joy-stick';\nimport Nav from '../components/nav';\nimport { IDLE_CONTROL, INSTRUCTION, TOAST_CONFIG } from '../constants';\nimport getCanvasSize, { getOnKey, getOffKey, getOnStick, getOffStick } from '../lib/misc-util';\nimport MultiplayerGame from '../lib/multiplayer-game';\nimport { CallBack, Control } from '../type';\n\nconst onGameOver: CallBack = (win) => {\n  if (win) toast.success('Congrats, You won the game 🚀', TOAST_CONFIG);\n  else toast.error('Too Slow,  Faster Next Time 😭', TOAST_CONFIG);\n};\n\nconst callBack: CallBack = (success, msg) => {\n  if (success) toast.success(msg, TOAST_CONFIG);\n  else toast.error(msg, TOAST_CONFIG);\n};\n\nconst createOnLeave = (cleanUp: () => void) => {\n  const onLeave = () => {\n    cleanUp();\n  };\n  window.addEventListener('beforeunload', onLeave);\n  window.addEventListener('pagehide', onLeave);\n};\n\nfunction MultiplayerMaze(): JSX.Element {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const bigScreen = useMediaQuery({ query: '(min-width: 600px)' });\n  const midScreen = useMediaQuery({ query: '(min-width: 400px)' });\n  const [canvasSize, setCanvasSize] = useState(getCanvasSize(bigScreen, midScreen));\n  const gameRef = useRef<MultiplayerGame>();\n  const animationRef = useRef(0);\n  const control = useRef<Control>(IDLE_CONTROL);\n  const keyDirs = useRef(0);\n\n  const onKey = getOnKey(keyDirs, control);\n  const offKey = getOffKey(keyDirs, control);\n  const onStick = getOnStick(control);\n  const offStick = getOffStick(control);\n\n  const animate: FrameRequestCallback = useCallback(() => {\n    gameRef.current?.performMove(control.current);\n    gameRef.current?.render();\n    animationRef.current = requestAnimationFrame(animate);\n  }, []);\n\n  useEffect(() => {\n    gameRef.current = new MultiplayerGame(canvasRef.current, onGameOver, callBack);\n    createOnLeave(() => gameRef.current?.cleanUp());\n    return () => {\n      gameRef.current?.cleanUp();\n    };\n  }, []);\n\n  useEffect(() => {\n    setCanvasSize(getCanvasSize(bigScreen, midScreen));\n  }, [bigScreen, midScreen]);\n\n  useEffect(() => {\n    animationRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(animationRef.current);\n  }, [animate]);\n\n  return (\n    <>\n      <Container onKeyDown={onKey} onKeyUp={offKey}>\n        <Nav />\n        <h1 className=\"text-4xl my-4\">Maze Multiplayer</h1>\n        <p>\n          No one is here? Invite your friend or open another client in incognito or another browser.\n        </p>\n        <p>{INSTRUCTION}</p>\n        <Canvas ref={canvasRef} size={canvasSize} />\n        <JoyStick size={100} offStick={offStick} onStick={onStick} />\n      </Container>\n    </>\n  );\n}\n\nexport default MultiplayerMaze;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport GenerationDemo from './pages/generation-demo';\nimport OfflineMaze from './pages/offline-maze';\nimport MultiplayerMaze from './pages/multiplayer-maze';\n\nfunction App(): JSX.Element {\n  return (\n    <>\n      <ToastContainer />\n      <Switch>\n        <Route exact path=\"/offline\">\n          <OfflineMaze />\n        </Route>\n        <Route exact path=\"/generation-demo\">\n          <GenerationDemo />\n        </Route>\n        <Route>\n          <MultiplayerMaze />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}