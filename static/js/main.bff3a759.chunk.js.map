{"version":3,"sources":["components/button.tsx","components/canvas.tsx","type.ts","components/label-input.tsx","constants.ts","components/nav.tsx","lib/maze-generator.ts","lib/canvas-manager.ts","pages/GenerateDemo.tsx","lib/game.ts","pages/Maze.tsx","pages/MultiplayerMaze.tsx","App.tsx","index.tsx"],"names":["Button","props","onClick","color","label","className","type","Canvas","React","forwardRef","ref","size","onKeyUp","onKeyDown","tabIndex","width","height","defaultProps","Direction","LabelInput","value","onChange","LINKS","name","url","Nav","items","map","item","href","maze","seen","START_CORD","r","c","ALL_DIRS_ARR","TOP","RIGHT","DOWN","LEFT","globalSeed","Math","random","getOPDir","dir","hasDirection","cell","removeDir","dirCombo","breakWall","grid","cord","create2DArray","val","Array","fill","setSeed","inputSeed","rand","x","sin","floor","getDirs","dirs","arr","i","length","ind","temp","shuffle","getNextCord","delta","getDirCordOffset","Error","isOutOfBound","isVisited","visit","depthFirstSearch","update","a","nextCord","depthFirstSearchSync","generateMaze","params","userSeed","onUpdate","generateMazeSync","TWO_PI","PI","sleep","ms","Promise","resolve","setTimeout","getOnUpdate","canvasManager","delay","cm","drawGrid","drawIndicatorSquare","CanvasManager","canvas","ctx","padX","padY","gridSize","cellSize","playerRadius","clearCanvas","clearRect","reduce","prev","row","isValidGrid","initDimension","drawBoundary","drawCell","beginPath","fillStyle","moveTo","cCord","rCord","lineTo","closePath","drawPlayer","lineWidth","drawCircle","min","radius","y","arc","stroke","strokeStyle","drawWall","context","getContext","this","handleChange","callBack","check","event","target","parseInt","GenerationDemo","canvasRef","createRef","useState","setSize","setDelay","toString","seed","busy","setIsBusy","bigScreen","useMediaQuery","query","canvasSize","setCanvasSize","useEffect","current","updateSize","n","updateDelay","d","updateSeed","s","START_POS","MARGIN","SPEED","Game","level","position","setLevel","renderGame","getMaze","getPosition","performMove","nr","nc","getBoundedCord","tr","tc","max","checkWin","dr","abs","dc","KEY_MAP","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Maze","useRef","game","requestRef","animate","useCallback","requestAnimationFrame","cancelAnimationFrame","preventDefault","key","addDir","MultiPlayerMaze","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bff3a759.chunk.js","sourcesContent":["import React, { MouseEventHandler } from 'react';\n\ninterface LabelInputProp {\n  onClick: MouseEventHandler<HTMLButtonElement>;\n  color: string;\n  label: string;\n}\n\nconst Button = (props: LabelInputProp): JSX.Element => {\n  const { onClick, color, label } = props;\n  return (\n    <button className={`p-3 rounded-lg ${color}`} onClick={onClick} type=\"submit\">\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { KeyboardEventHandler, LegacyRef } from 'react';\n\ninterface CanvasProps {\n  onKeyDown?: KeyboardEventHandler<HTMLCanvasElement>;\n  onKeyUp?: KeyboardEventHandler<HTMLCanvasElement>;\n  size: number;\n}\n\nconst Canvas = React.forwardRef(\n  (props: CanvasProps, ref: LegacyRef<HTMLCanvasElement>): JSX.Element => {\n    const { size, onKeyUp, onKeyDown } = props;\n    return (\n      <canvas\n        tabIndex={0}\n        onKeyDown={onKeyDown}\n        onKeyUp={onKeyUp}\n        ref={ref}\n        width={size}\n        height={size}\n        className=\"bg-white\"\n      />\n    );\n  }\n);\n\nCanvas.defaultProps = {\n  onKeyDown: () => true,\n  onKeyUp: () => true\n};\n\nexport default Canvas;\n","// eslint-disable-next-line\nexport enum Direction {\n  TOP = 1, // 0001\n  RIGHT = 2, // 0010\n  DOWN = 4, // 0100\n  LEFT = 8 // 1000\n}\nexport type Link = { name: string; url: string };\nexport type Cell = number;\nexport type Cord = { r: number; c: number };\nexport type OnUpdate = (grid: Cell[][], cord: Cord) => Promise<void>;\nexport type Config = { userSeed?: number; onUpdate?: OnUpdate };\nexport type CanvasOrNull = HTMLCanvasElement | null;\nexport type Context = CanvasRenderingContext2D;\n","import React, { ChangeEventHandler } from 'react';\n\ninterface LabelInputProp {\n  value: string | number;\n  onChange: ChangeEventHandler<HTMLInputElement>;\n  label: string;\n}\n\nconst LabelInput = (props: LabelInputProp): JSX.Element => {\n  const { value, onChange, label } = props;\n  return (\n    <div className=\"flex flex-col items-center\">\n      <p className=\"inline-block text-white text-lg\">{label}</p>\n      <input className=\"w-16 text-black\" value={value} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default LabelInput;\n","import { Link } from './type';\n\nconst LINKS: Array<Link> = [\n  { name: 'Home', url: 'https://shuby-mao.web.app/' },\n  { name: 'Project Page', url: 'https://shuby-mao.web.app/projects/web-multiplayer-maze' },\n  { name: 'Multiplayer Maze', url: '/online' },\n  { name: 'Generator Demo', url: '/generator' },\n  { name: 'Offline Maze', url: '/' }\n];\n\nexport default LINKS;\n","import React, { FC } from 'react';\nimport LINKS from '../constants';\n\nconst Nav: FC = () => {\n  const items = LINKS;\n  return (\n    <div className=\"flex justify-items-center flex-wrap gap-4 text-white\">\n      {items.map((item) => {\n        return (\n          <a href={item.url} className=\"hover:text-green-500\">\n            {item.name}\n          </a>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Nav;\n","import { Cell, Cord, OnUpdate, Config, Direction } from '../type';\n\nexport const START_CORD = { r: 0, c: 0 };\nexport const ALL_DIRS_ARR = [Direction.TOP, Direction.RIGHT, Direction.DOWN, Direction.LEFT];\nconst ALL_DIRS = 15; // 1111\nlet globalSeed: number = Math.random() * 1e9;\nlet maze: Cell[][];\nlet seen: boolean[][];\n\nexport function isValidGrid(grid?: Cell[][]): boolean {\n  if (!grid) return false;\n  if (grid.length === 0) return false;\n  const size = grid.length;\n  const col = grid.reduce((prev, row) => {\n    if (!row || row.length !== prev) return -1;\n    return prev;\n  }, size);\n  if (col === -1) return false;\n  return true;\n}\n\nexport function getOPDir(dir: Direction): Direction {\n  if (dir === Direction.TOP) return Direction.DOWN;\n  if (dir === Direction.RIGHT) return Direction.LEFT;\n  if (dir === Direction.DOWN) return Direction.TOP;\n  return Direction.RIGHT;\n}\n\nexport function getDirCordOffset(dir: Direction): number[] {\n  if (dir === Direction.TOP) return [-1, 0];\n  if (dir === Direction.RIGHT) return [0, 1];\n  if (dir === Direction.DOWN) return [1, 0];\n  return [0, -1];\n}\n\nexport function hasDirection(cell: Cell, dir: Direction): boolean {\n  const hasDir = (cell & dir) !== 0;\n  return hasDir;\n}\n\nexport function removeDir(dirCombo: number, dir: Direction): number {\n  if (hasDirection(dirCombo, dir)) return dirCombo ^ dir;\n  return dirCombo;\n}\n\nexport function addDir(dirCombo: number, dir: Direction): number {\n  return dirCombo | dir;\n}\n\nexport function breakWall(grid: Cell[][], cord: Cord, dir: Direction): void {\n  const { r, c } = cord;\n  grid[r][c] = removeDir(grid[r][c], dir);\n}\n\nexport function create2DArray<T>(size: number, val: T): T[][] {\n  const arr = new Array<Array<T>>(size);\n  return arr.fill([]).map(() => new Array<T>(size).fill(val));\n}\n\nexport function getRandomSeed(): number {\n  return Math.floor(Math.random() * 100000);\n}\n\nfunction setSeed(inputSeed?: number) {\n  if (inputSeed) globalSeed = inputSeed;\n  else globalSeed = Math.random() * 1e9;\n}\n\nexport function rand(): number {\n  if (!globalSeed) return Math.random();\n  const x = Math.sin(globalSeed) * 100000;\n  globalSeed++;\n  return x - Math.floor(x);\n}\n\nexport function shuffle<T>(arr: T[]): void {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const ind = Math.floor(rand() * (i + 1));\n    const temp = arr[i];\n    arr[i] = arr[ind];\n    arr[ind] = temp;\n  }\n}\n\nexport function getDirs(): Direction[] {\n  const dirs = [Direction.TOP, Direction.RIGHT, Direction.DOWN, Direction.LEFT];\n  shuffle(dirs);\n  return dirs;\n}\n\nexport function getNextCord(cord: Cord, dir: Direction): Cord {\n  const delta = getDirCordOffset(dir);\n  if (!delta) throw new Error('Delta not found.');\n  return { r: cord.r + delta[0], c: cord.c + delta[1] };\n}\n\nexport function isOutOfBound(grid: Cell[][], cord: Cord): boolean {\n  const { r, c } = cord;\n  if (r < 0 || c < 0 || r >= grid.length || c >= grid[0].length) return true;\n  return false;\n}\n\nexport function isVisited(cord: Cord): boolean {\n  const { r, c } = cord;\n  return seen[r][c];\n}\n\nexport function visit(cord: Cord): void {\n  const { r, c } = cord;\n  seen[r][c] = true;\n}\n\nasync function depthFirstSearch(cord: Cord, update?: OnUpdate): Promise<void> {\n  const dirs = getDirs();\n  visit(cord);\n  if (update) await update(maze, cord);\n  for (const dir of dirs) {\n    const nextCord = getNextCord(cord, dir);\n    if (!isOutOfBound(maze, nextCord) && !isVisited(nextCord)) {\n      breakWall(maze, cord, dir);\n      breakWall(maze, nextCord, getOPDir(dir));\n      await depthFirstSearch(nextCord, update);\n    }\n  }\n}\n\nfunction depthFirstSearchSync(cord: Cord): void {\n  const dirs = getDirs();\n  visit(cord);\n  for (const dir of dirs) {\n    const nextCord = getNextCord(cord, dir);\n    if (!isOutOfBound(maze, nextCord) && !isVisited(nextCord)) {\n      breakWall(maze, cord, dir);\n      breakWall(maze, nextCord, getOPDir(dir));\n      depthFirstSearchSync(nextCord);\n    }\n  }\n}\n\nexport async function generateMaze(size: number, params: Config = {}): Promise<Cell[][]> {\n  const { userSeed, onUpdate } = params;\n  maze = create2DArray<Cell>(size, ALL_DIRS);\n  seen = create2DArray<boolean>(size, false);\n  setSeed(userSeed);\n  await depthFirstSearch(START_CORD, onUpdate);\n  return maze;\n}\n\nexport function generateMazeSync(size: number, userSeed?: number): Cell[][] {\n  maze = create2DArray<Cell>(size, ALL_DIRS);\n  seen = create2DArray<boolean>(size, false);\n  setSeed(userSeed);\n  depthFirstSearchSync(START_CORD);\n  return maze;\n}\n","import { hasDirection, isValidGrid, ALL_DIRS_ARR } from './maze-generator';\nimport { Direction, Cell, Cord, OnUpdate, CanvasOrNull, Context } from '../type';\n\nconst PADDING = 10;\nconst BORDER_COLOR = '#000000';\nconst INDICATOR_COLOR = '#FF0000';\nconst DEFAULT_PLAYER_COLOR = '#';\nconst TWO_PI = 2 * Math.PI;\nconst DEFAULT_STOKE_WIDTH = 1;\nconst PLAYER_STOKE_WIDTH = 2;\n\nfunction sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nfunction getContext(canvas?: CanvasOrNull) {\n  if (!canvas) throw new Error('Canvas is not defined.');\n  const { height, width } = canvas;\n  const context = canvas.getContext('2d');\n  if (!context) throw new Error('Unable to get context.');\n  return { context, height, width };\n}\n\nexport function getOnUpdate(canvasManager: CanvasManager, delay = 50): OnUpdate {\n  const cm = canvasManager;\n  return async (grid: Cell[][], cord: Cord) => {\n    cm.drawGrid(grid);\n    cm.drawIndicatorSquare(cord);\n    await sleep(delay);\n  };\n}\n\nexport default class CanvasManager {\n  private ctx: Context;\n\n  private width: number;\n\n  private height: number;\n\n  private padX = 0;\n\n  private padY = 0;\n\n  private gridSize = -1;\n\n  private cellSize = -1;\n\n  private playerRadius = -1;\n\n  constructor(canvas: CanvasOrNull) {\n    const { context, height, width } = getContext(canvas);\n    this.ctx = context;\n    this.width = width;\n    this.height = height;\n  }\n\n  public clearCanvas = (): void => {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n  };\n\n  public drawGrid = (grid?: Cell[][]): void => {\n    if (!grid || !isValidGrid(grid)) throw new Error('Grid not valid');\n    this.initDimension(this.width, this.height, grid);\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    this.drawBoundary();\n    for (let r = 0; r < grid.length; r++) {\n      for (let c = 0; c < grid[0].length; c++) {\n        this.drawCell(grid[r][c], { r, c });\n      }\n    }\n  };\n\n  public drawIndicatorSquare = (cord: Cord): void => {\n    this.ctx.beginPath();\n    this.ctx.fillStyle = INDICATOR_COLOR;\n    const { r, c } = cord;\n    this.ctx.moveTo(this.cCord(c) + 1, this.rCord(r) + 1);\n    this.ctx.lineTo(this.cCord(c + 1) - 1, this.rCord(r) + 1);\n    this.ctx.lineTo(this.cCord(c + 1) - 1, this.rCord(r + 1) - 1);\n    this.ctx.lineTo(this.cCord(c) + 1, this.rCord(r + 1) - 1);\n    this.ctx.closePath();\n    this.ctx.fill();\n  };\n\n  public drawPlayer = (cord: Cord, color: string = DEFAULT_PLAYER_COLOR): void => {\n    this.ctx.fillStyle = color;\n    this.ctx.lineWidth = PLAYER_STOKE_WIDTH;\n    this.drawCircle(cord, this.playerRadius);\n  };\n\n  private initDimension = (width: number, height: number, grid: Cell[][]): void => {\n    this.gridSize = Math.min(width, height) - 2 * PADDING;\n    this.cellSize = this.gridSize / grid.length;\n    this.playerRadius = this.cellSize * 0.1;\n    this.padY = (height - this.gridSize) / 2;\n    this.padX = (width - this.gridSize) / 2;\n  };\n\n  private drawCircle = (cord: Cord, radius: number): void => {\n    this.ctx.beginPath();\n    const x = this.cCord(cord.c);\n    const y = this.rCord(cord.r);\n    this.ctx.arc(x, y, radius, 0, TWO_PI);\n    this.ctx.fill();\n    this.ctx.stroke();\n  };\n\n  private rCord = (r: number) => {\n    return this.padY + r * this.cellSize;\n  };\n\n  private cCord = (c: number) => {\n    return this.padX + c * this.cellSize;\n  };\n\n  private drawBoundary = (): void => {\n    if (this.gridSize > 0) {\n      this.ctx.lineWidth = DEFAULT_STOKE_WIDTH;\n      this.ctx.strokeStyle = BORDER_COLOR;\n      this.ctx.beginPath();\n      this.ctx.moveTo(this.padX, this.padY);\n      this.ctx.lineTo(this.padX + this.gridSize, this.padY);\n      this.ctx.lineTo(this.padX + this.gridSize, this.padY + this.gridSize);\n      this.ctx.lineTo(this.padX, this.padY + this.gridSize);\n      this.ctx.closePath();\n      this.ctx.stroke();\n    }\n  };\n\n  private drawCell = (cell: Cell, cord: Cord): void => {\n    for (const dir of ALL_DIRS_ARR) {\n      if (hasDirection(cell, dir)) {\n        this.drawWall(cord, dir);\n      }\n    }\n  };\n\n  private drawWall = (cord: Cord, dir: Direction): void => {\n    const { r, c } = cord;\n    this.ctx.beginPath();\n    if (dir === Direction.TOP || dir === Direction.LEFT)\n      this.ctx.moveTo(this.cCord(c), this.rCord(r));\n    else this.ctx.moveTo(this.cCord(c + 1), this.rCord(r + 1));\n    if (dir === Direction.TOP || dir === Direction.RIGHT)\n      this.ctx.lineTo(this.cCord(c + 1), this.rCord(r));\n    else this.ctx.lineTo(this.cCord(c), this.rCord(r + 1));\n    this.ctx.closePath();\n    this.ctx.stroke();\n  };\n}\n","import React, { createRef, useEffect, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport Button from '../components/button';\nimport Canvas from '../components/canvas';\nimport LabelInput from '../components/label-input';\nimport Nav from '../components/nav';\nimport CanvasManager, { getOnUpdate } from '../lib/canvas-manager';\nimport { generateMaze, getRandomSeed } from '../lib/maze-generator';\n\nfunction handleChange(callBack: React.Dispatch<string>, check: (nVal: number) => boolean) {\n  return (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    if (!value || check(parseInt(value, 10))) callBack(value);\n  };\n}\n\nfunction GenerationDemo(): JSX.Element {\n  const canvasRef: React.LegacyRef<HTMLCanvasElement> = createRef();\n\n  const [size, setSize] = useState('10');\n  const [delay, setDelay] = useState('10');\n  const [seed, setSeed] = useState(getRandomSeed().toString());\n  const [busy, setIsBusy] = useState(false);\n  const bigScreen = useMediaQuery({ query: '(min-width: 550px)' });\n  const [canvasSize, setCanvasSize] = useState(bigScreen ? 500 : 250);\n\n  useEffect(() => {\n    setCanvasSize(bigScreen ? 500 : 200);\n  }, [bigScreen]);\n\n  const onClick = async () => {\n    if (busy) return;\n    setIsBusy(true);\n    const canvas = canvasRef.current;\n    const canvasManager = new CanvasManager(canvas);\n    const onUpdate = getOnUpdate(canvasManager, parseInt(delay, 10));\n    const userSeed = parseInt(seed, 10);\n    const maze = await generateMaze(parseInt(size, 10), { onUpdate, userSeed });\n    canvasManager.drawGrid(maze);\n    setIsBusy(false);\n  };\n\n  const updateSize = handleChange(setSize, (n) => n <= 50);\n  const updateDelay = handleChange(setDelay, (d) => d < 400);\n  const updateSeed = handleChange(setSeed, (s) => s < 100000);\n\n  return (\n    <div className=\"w-full min-h-screen bg-gray-700\">\n      <div className=\"space-y-3 flex flex-col items-center p-4 text-white\">\n        <h1 className=\"text-4xl my-4\">Generation Demo</h1>\n        <Nav />\n        <Canvas ref={canvasRef} size={canvasSize} />\n        <div className=\"flex flex-wrap gap-3 items-center place-content-center\">\n          <LabelInput label=\"Size\" value={size} onChange={updateSize} />\n          <LabelInput label=\"Delay\" value={delay} onChange={updateDelay} />\n          <LabelInput label=\"Seed\" value={seed} onChange={updateSeed} />\n          <Button color=\"bg-green-500\" onClick={onClick} label=\"Generate\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GenerationDemo;\n","import CanvasManager from './canvas-manager';\nimport { generateMazeSync, hasDirection } from './maze-generator';\nimport { Cell, Cord, Direction, CanvasOrNull } from '../type';\n\nconst START_POS: Cord = { r: 0.5, c: 0.5 };\nconst MARGIN = 0.1;\nconst SPEED = 0.04;\n\nexport default class Game {\n  private canvasManager: CanvasManager;\n\n  private level: number;\n\n  private maze: Cell[][];\n\n  private gridSize: number;\n\n  private position: Cord;\n\n  private seed?: number;\n\n  constructor(canvas: CanvasOrNull, level: number, seed?: number) {\n    this.seed = seed;\n    this.level = level;\n    this.gridSize = this.level + 5;\n    this.position = START_POS;\n    this.maze = generateMazeSync(this.gridSize, this.seed);\n    this.canvasManager = new CanvasManager(canvas);\n  }\n\n  public setLevel = (level: number): void => {\n    this.level = level;\n    this.gridSize += level + 5;\n    this.position = START_POS;\n    this.maze = generateMazeSync(this.gridSize, this.seed);\n    this.renderGame();\n  };\n\n  public getMaze = (): Cell[][] => {\n    return this.maze;\n  };\n\n  public getPosition = (): Cord => {\n    return this.position;\n  };\n\n  public performMove = (dir: number): void => {\n    let nr = this.position.r;\n    let nc = this.position.c;\n    if (hasDirection(dir, Direction.TOP)) nr -= SPEED;\n    if (hasDirection(dir, Direction.DOWN)) nr += SPEED;\n    if (hasDirection(dir, Direction.LEFT)) nc -= SPEED;\n    if (hasDirection(dir, Direction.RIGHT)) nc += SPEED;\n    this.position = this.getBoundedCord(nr, nc);\n  };\n\n  private getBoundedCord = (nr: number, nc: number): Cord => {\n    const { r, c } = this.position;\n    const [tr, tc] = [Math.floor(r), Math.floor(c)];\n    const cell = this.maze[tr][tc];\n    if (hasDirection(cell, Direction.TOP)) nr = Math.max(tr + MARGIN, nr);\n    if (hasDirection(cell, Direction.DOWN)) nr = Math.min(tr + 1 - MARGIN, nr);\n    if (hasDirection(cell, Direction.LEFT)) nc = Math.max(tc + MARGIN, nc);\n    if (hasDirection(cell, Direction.RIGHT)) nc = Math.min(tc + 1 - MARGIN, nc);\n    return { r: nr, c: nc };\n  };\n\n  public checkWin = (): boolean => {\n    const dr = Math.abs(this.position.r - (this.gridSize - 0.5));\n    const dc = Math.abs(this.position.c - (this.gridSize - 0.5));\n    return dr <= 0.5 && dc <= 0.5;\n  };\n\n  public renderGame = (): void => {\n    this.canvasManager.drawGrid(this.maze);\n    this.canvasManager.drawPlayer(this.position);\n  };\n}\n","import React, { KeyboardEventHandler, useCallback, useEffect, useRef, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport Canvas from '../components/canvas';\nimport Nav from '../components/nav';\nimport Game from '../lib/game';\nimport { addDir, removeDir } from '../lib/maze-generator';\nimport { Direction } from '../type';\n\ninterface StringMap {\n  [key: string]: number;\n}\n\nconst KEY_MAP: StringMap = {\n  ArrowLeft: Direction.LEFT,\n  ArrowUp: Direction.TOP,\n  ArrowRight: Direction.RIGHT,\n  ArrowDown: Direction.DOWN\n};\n\nfunction Maze(): JSX.Element {\n  const [level, setLevel] = useState(1);\n  const canvasRef: React.LegacyRef<HTMLCanvasElement> = useRef(null);\n  const bigScreen = useMediaQuery({ query: '(min-width: 550px)' });\n  const [canvasSize, setCanvasSize] = useState(bigScreen ? 500 : 250);\n  const game = useRef<Game>();\n  const requestRef = React.useRef(0);\n  let dirCombo = 0;\n\n  useEffect(() => {\n    setCanvasSize(bigScreen ? 500 : 200);\n    game.current = new Game(canvasRef.current, level);\n  }, [bigScreen, level]);\n\n  const animate: FrameRequestCallback = useCallback(() => {\n    game.current?.performMove(dirCombo);\n    game.current?.renderGame();\n    if (game.current?.checkWin()) {\n      setLevel(level + 1);\n    }\n    requestRef.current = requestAnimationFrame(animate);\n  }, [dirCombo, game, level]);\n\n  React.useEffect(() => {\n    requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, [animate]);\n\n  const onKeyDown: KeyboardEventHandler<HTMLCanvasElement> = (event) => {\n    event.preventDefault();\n    const dir = KEY_MAP[event.key] || 0;\n    dirCombo = addDir(dirCombo, dir);\n  };\n\n  const onKeyUp: KeyboardEventHandler<HTMLCanvasElement> = (event) => {\n    const dir = KEY_MAP[event.key] || 0;\n    event.preventDefault();\n    dirCombo = removeDir(dirCombo, dir);\n  };\n\n  return (\n    <div className=\"w-full min-h-screen bg-gray-700\">\n      <div className=\"space-y-3 flex flex-col items-center p-4 text-white\">\n        <h1 className=\"text-4xl my-4\">Offline Maze Level {level}</h1>\n        <Nav />\n        <Canvas onKeyDown={onKeyDown} onKeyUp={onKeyUp} ref={canvasRef} size={canvasSize} />\n      </div>\n    </div>\n  );\n}\n\nexport default Maze;\n","import React from 'react';\nimport Nav from '../components/nav';\n\nfunction MultiPlayerMaze(): JSX.Element {\n  return (\n    <div className=\"w-full h-screen flex flex-col space-y-3 text-center items-center\">\n      <h1>Maze Multiplayer</h1>\n      <Nav />\n    </div>\n  );\n}\n\nexport default MultiPlayerMaze;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport GenerationDemo from './pages/GenerateDemo';\nimport Maze from './pages/Maze';\nimport MultiPlayerMaze from './pages/MultiplayerMaze';\n\nfunction App(): JSX.Element {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/online\">\n          <MultiPlayerMaze />\n        </Route>\n        <Route path=\"/generator\">\n          <GenerationDemo />\n        </Route>\n        <Route path=\"/\">\n          <Maze />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}