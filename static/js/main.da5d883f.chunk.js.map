{"version":3,"sources":["components/button.tsx","components/canvas.tsx","type.ts","components/container.tsx","components/label-input.tsx","constants.ts","components/nav.tsx","lib/direction-util.ts","lib/maze-generator.ts","lib/canvas-manager.ts","pages/GenerateDemo.tsx","components/joy-stick.tsx","lib/game.ts","pages/Maze.tsx","pages/MultiplayerMaze.tsx","App.tsx","index.tsx"],"names":["Button","props","onClick","color","label","className","type","Canvas","React","forwardRef","ref","size","onKeyUp","onKeyDown","width","height","defaultProps","Direction","Container","children","tabIndex","role","LabelInput","value","onChange","IDLE_CONTROL","magnitude","angle","LINKS","name","url","Nav","items","map","item","charAt","to","process","href","ALL_DIRS_ARR","TOP","RIGHT","DOWN","LEFT","getOPDir","dir","hasDirection","cell","removeDir","dirCombo","getControlFromDir","dx","dy","Math","atan2","maze","seen","START_CORD","r","c","globalSeed","random","breakWall","grid","cord","create2DArray","val","Array","fill","setSeed","inputSeed","rand","x","sin","floor","getDirs","dirs","arr","i","length","ind","temp","shuffle","getNextCord","delta","getDirCordOffset","Error","isOutOfBound","isVisited","visit","depthFirstSearch","update","a","nextCord","depthFirstSearchSync","generateMaze","params","userSeed","onUpdate","generateMazeSync","DEFAULT_PLAYER_COLOR","TWO_PI","PI","sleep","ms","Promise","resolve","setTimeout","getContext","canvas","context","getOnUpdate","canvasManager","delay","cm","drawGrid","drawIndicatorSquare","CanvasManager","ctx","padX","padY","gridSize","cellSize","playerRadius","clearCanvas","clearRect","reduce","prev","row","isValidGrid","initDimension","drawBoundary","drawCell","fillStyle","drawSquare","drawStartFinish","drawPlayer","lineWidth","drawCircle","stroke","min","radius","beginPath","cCord","y","rCord","arc","closePath","moveTo","lineTo","strokeStyle","drawWall","this","handleChange","callBack","check","event","target","parseInt","GenerationDemo","canvasRef","createRef","useState","setSize","setDelay","toString","seed","busy","setIsBusy","bigScreen","useMediaQuery","query","canvasSize","setCanvasSize","useEffect","current","updateSize","n","updateDelay","d","updateSeed","s","JOY_STICK_CONFIG","threshold","position","top","left","mode","dynamicPage","JoyStick","onEventHandler","offEventHandler","myContainer","manager","useRef","onEvent","useCallback","evt","data","control","distance","radian","config","zone","nipplejs","create","on","off","destroy","style","START_POS","MARGIN","Game","level","setLevel","renderGame","getMaze","getPosition","performMove","nr","nc","cos","getBoundedCord","tr","tc","max","checkWin","dr","abs","dc","refreshContext","getCanvasSize","midScreen","KEY_MAP","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Maze","game","animationRef","keyDirs","animate","requestAnimationFrame","cancelAnimationFrame","ctrl","key","preventDefault","addDir","MultiPlayerMaze","App","exact","path","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.da5d883f.chunk.js","sourcesContent":["import React, { MouseEventHandler } from 'react';\n\ninterface LabelInputProp {\n  onClick: MouseEventHandler<HTMLButtonElement>;\n  color: string;\n  label: string;\n}\n\nconst Button = (props: LabelInputProp): JSX.Element => {\n  const { onClick, color, label } = props;\n  return (\n    <button\n      className={`p-3 rounded-lg ${color} bg-opacity-90 hover:bg-opacity-100`}\n      onClick={onClick}\n      type=\"submit\"\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { KeyboardEventHandler, LegacyRef } from 'react';\n\ninterface CanvasProps {\n  onKeyDown?: KeyboardEventHandler<HTMLCanvasElement>;\n  onKeyUp?: KeyboardEventHandler<HTMLCanvasElement>;\n  size: number;\n}\n\nconst Canvas = React.forwardRef(\n  (props: CanvasProps, ref: LegacyRef<HTMLCanvasElement>): JSX.Element => {\n    const { size, onKeyUp, onKeyDown } = props;\n    return (\n      <canvas\n        onKeyDown={onKeyDown}\n        onKeyUp={onKeyUp}\n        ref={ref}\n        width={size}\n        height={size}\n        className=\"bg-white\"\n      />\n    );\n  }\n);\n\nCanvas.defaultProps = {\n  onKeyDown: () => true,\n  onKeyUp: () => true\n};\n\nexport default Canvas;\n","// eslint-disable-next-line\nexport enum Direction {\n  TOP = 1, // 0001\n  RIGHT = 2, // 0010\n  DOWN = 4, // 0100\n  LEFT = 8 // 1000\n}\nexport type Link = { name: string; url: string };\nexport type Cell = number;\nexport type Cord = { r: number; c: number };\nexport type OnUpdate = (grid: Cell[][], cord: Cord) => Promise<void>;\nexport type Config = { userSeed?: number; onUpdate?: OnUpdate };\nexport type CanvasOrNull = HTMLCanvasElement | null;\nexport type Context = CanvasRenderingContext2D;\nexport type Control = { magnitude: number; angle: number };\n","import React, { FC, KeyboardEventHandler } from 'react';\n\nexport interface ContainerProps {\n  onKeyDown?: KeyboardEventHandler<HTMLDivElement>;\n  onKeyUp?: KeyboardEventHandler<HTMLDivElement>;\n  children: JSX.Element | Array<JSX.Element>;\n}\n\nconst Container: FC<ContainerProps> = (props: ContainerProps) => {\n  const { children, onKeyDown, onKeyUp } = props;\n  return (\n    <div\n      tabIndex={0}\n      role=\"button\"\n      onKeyDown={onKeyDown}\n      onKeyUp={onKeyUp}\n      className=\"w-full cursor-default min-h-screen bg-gray-700\"\n    >\n      <div className=\"space-y-3 flex flex-col items-center p-4 text-white\">{children}</div>\n    </div>\n  );\n};\n\nexport default Container;\n","import React, { ChangeEventHandler } from 'react';\n\ninterface LabelInputProp {\n  value: string | number;\n  onChange: ChangeEventHandler<HTMLInputElement>;\n  label: string;\n}\n\nconst LabelInput = (props: LabelInputProp): JSX.Element => {\n  const { value, onChange, label } = props;\n  return (\n    <div className=\"flex flex-col text-black items-center\">\n      <p className=\"inline-block text-white text-lg\">{label}</p>\n      <input\n        className=\"w-16 text-center bg-gray-200 focus:bg-white\"\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default LabelInput;\n","import { Control, Link } from './type';\n\nconst LINKS: Array<Link> = [\n  { name: 'Home', url: 'https://shuby-mao.web.app/' },\n  { name: 'Project Page', url: 'https://shuby-mao.web.app/projects/web-multiplayer-maze' },\n  { name: 'Multiplayer Maze', url: '/online' },\n  { name: 'Generator Demo', url: '/generator' },\n  { name: 'Offline Maze', url: '/' }\n];\n\nexport const IDLE_CONTROL: Control = { magnitude: 0, angle: 0 };\n\nexport default LINKS;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport LINKS from '../constants';\n\nconst Nav: FC = () => {\n  const items = LINKS;\n  return (\n    <div className=\"flex justify-center flex-wrap gap-4 text-white\">\n      {items.map((item) => {\n        return item.url.charAt(0) === '/' ? (\n          <Link\n            className=\"hover:text-green-500\"\n            key={item.name}\n            to={process.env.PUBLIC_URL + item.url}\n          >\n            {item.name}\n          </Link>\n        ) : (\n          <a href={item.url} key={item.name} className=\"hover:text-green-500\">\n            {item.name}\n          </a>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Nav;\n","import { IDLE_CONTROL } from '../constants';\nimport { Cell, Control, Direction } from '../type';\n\nexport const ALL_DIRS_ARR = [Direction.TOP, Direction.RIGHT, Direction.DOWN, Direction.LEFT];\nexport const ALL_DIRS_CELL = 15; // 1111\n\nexport function getOPDir(dir: Direction): Direction {\n  if (dir === Direction.TOP) return Direction.DOWN;\n  if (dir === Direction.RIGHT) return Direction.LEFT;\n  if (dir === Direction.DOWN) return Direction.TOP;\n  return Direction.RIGHT;\n}\n\nexport function getDirCordOffset(dir: Direction): number[] {\n  if (dir === Direction.TOP) return [-1, 0];\n  if (dir === Direction.RIGHT) return [0, 1];\n  if (dir === Direction.DOWN) return [1, 0];\n  return [0, -1];\n}\n\nexport function hasDirection(cell: Cell, dir: Direction): boolean {\n  const hasDir = (cell & dir) !== 0;\n  return hasDir;\n}\n\nexport function removeDir(dirCombo: number, dir: Direction): number {\n  if (hasDirection(dirCombo, dir)) return dirCombo ^ dir;\n  return dirCombo;\n}\n\nexport function addDir(dirCombo: number, dir: Direction): number {\n  return dirCombo | dir;\n}\n\nexport default function getControlFromDir(dir: number): Control {\n  let [dx, dy] = [0, 0];\n  if (hasDirection(dir, Direction.TOP)) dy += 1;\n  if (hasDirection(dir, Direction.DOWN)) dy -= 1;\n  if (hasDirection(dir, Direction.RIGHT)) dx += 1;\n  if (hasDirection(dir, Direction.LEFT)) dx -= 1;\n  if (dy === 0 && dx === 0) return IDLE_CONTROL;\n  const angle = Math.atan2(dy, dx);\n  return { angle, magnitude: 1 };\n}\n","import { Cell, Cord, OnUpdate, Config, Direction } from '../type';\nimport { ALL_DIRS_CELL, getDirCordOffset, getOPDir, removeDir } from './direction-util';\n\nexport const START_CORD = { r: 0, c: 0 };\n\nlet globalSeed: number = Math.random() * 1e9;\nlet maze: Cell[][];\nlet seen: boolean[][];\n\nexport function isValidGrid(grid?: Cell[][]): boolean {\n  if (!grid) return false;\n  if (grid.length === 0) return false;\n  const size = grid.length;\n  const col = grid.reduce((prev, row) => {\n    if (!row || row.length !== prev) return -1;\n    return prev;\n  }, size);\n  if (col === -1) return false;\n  return true;\n}\n\nexport function breakWall(grid: Cell[][], cord: Cord, dir: Direction): void {\n  const { r, c } = cord;\n  grid[r][c] = removeDir(grid[r][c], dir);\n}\n\nexport function create2DArray<T>(size: number, val: T): T[][] {\n  const arr = new Array<Array<T>>(size);\n  return arr.fill([]).map(() => new Array<T>(size).fill(val));\n}\n\nexport function getRandomSeed(): number {\n  return Math.floor(Math.random() * 100000);\n}\n\nfunction setSeed(inputSeed?: number) {\n  if (inputSeed) globalSeed = inputSeed;\n  else globalSeed = Math.random() * 1e9;\n}\n\nexport function rand(): number {\n  if (!globalSeed) return Math.random();\n  const x = Math.sin(globalSeed) * 100000;\n  globalSeed++;\n  return x - Math.floor(x);\n}\n\nexport function shuffle<T>(arr: T[]): void {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const ind = Math.floor(rand() * (i + 1));\n    const temp = arr[i];\n    arr[i] = arr[ind];\n    arr[ind] = temp;\n  }\n}\n\nexport function getDirs(): Direction[] {\n  const dirs = [Direction.TOP, Direction.RIGHT, Direction.DOWN, Direction.LEFT];\n  shuffle(dirs);\n  return dirs;\n}\n\nexport function getNextCord(cord: Cord, dir: Direction): Cord {\n  const delta = getDirCordOffset(dir);\n  if (!delta) throw new Error('Delta not found.');\n  return { r: cord.r + delta[0], c: cord.c + delta[1] };\n}\n\nexport function isOutOfBound(grid: Cell[][], cord: Cord): boolean {\n  const { r, c } = cord;\n  if (r < 0 || c < 0 || r >= grid.length || c >= grid[0].length) return true;\n  return false;\n}\n\nexport function isVisited(cord: Cord): boolean {\n  const { r, c } = cord;\n  return seen[r][c];\n}\n\nexport function visit(cord: Cord): void {\n  const { r, c } = cord;\n  seen[r][c] = true;\n}\n\nasync function depthFirstSearch(cord: Cord, update?: OnUpdate): Promise<void> {\n  const dirs = getDirs();\n  visit(cord);\n  if (update) await update(maze, cord);\n  for (const dir of dirs) {\n    const nextCord = getNextCord(cord, dir);\n    if (!isOutOfBound(maze, nextCord) && !isVisited(nextCord)) {\n      breakWall(maze, cord, dir);\n      breakWall(maze, nextCord, getOPDir(dir));\n      await depthFirstSearch(nextCord, update);\n    }\n  }\n}\n\nfunction depthFirstSearchSync(cord: Cord): void {\n  const dirs = getDirs();\n  visit(cord);\n  for (const dir of dirs) {\n    const nextCord = getNextCord(cord, dir);\n    if (!isOutOfBound(maze, nextCord) && !isVisited(nextCord)) {\n      breakWall(maze, cord, dir);\n      breakWall(maze, nextCord, getOPDir(dir));\n      depthFirstSearchSync(nextCord);\n    }\n  }\n}\n\nexport async function generateMaze(size: number, params: Config = {}): Promise<Cell[][]> {\n  const { userSeed, onUpdate } = params;\n  maze = create2DArray<Cell>(size, ALL_DIRS_CELL);\n  seen = create2DArray<boolean>(size, false);\n  setSeed(userSeed);\n  await depthFirstSearch(START_CORD, onUpdate);\n  return maze;\n}\n\nexport function generateMazeSync(size: number, userSeed?: number): Cell[][] {\n  maze = create2DArray<Cell>(size, ALL_DIRS_CELL);\n  seen = create2DArray<boolean>(size, false);\n  setSeed(userSeed);\n  depthFirstSearchSync(START_CORD);\n  return maze;\n}\n","import { isValidGrid } from './maze-generator';\nimport { Direction, Cell, Cord, OnUpdate, CanvasOrNull, Context } from '../type';\nimport { hasDirection, ALL_DIRS_ARR } from './direction-util';\n\nconst PADDING = 10;\nconst START_COLOR = '#DC2626';\nconst END_COLOR = '#10B981';\nconst BORDER_COLOR = '#000000';\nconst INDICATOR_COLOR = '#FF0000';\nconst DEFAULT_PLAYER_COLOR = '#FBBF24';\nconst TWO_PI = 2 * Math.PI;\nconst DEFAULT_STOKE_WIDTH = 1;\nconst PLAYER_STOKE_WIDTH = 2;\n\nfunction sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nfunction getContext(canvas?: CanvasOrNull) {\n  if (!canvas) throw new Error('Canvas is not defined.');\n  const { height, width } = canvas;\n  const context = canvas.getContext('2d');\n  if (!context) throw new Error('Unable to get context.');\n  return { context, height, width };\n}\n\nexport function getOnUpdate(canvasManager: CanvasManager, delay = 50): OnUpdate {\n  const cm = canvasManager;\n  return async (grid: Cell[][], cord: Cord) => {\n    cm.drawGrid(grid);\n    cm.drawIndicatorSquare(cord);\n    await sleep(delay);\n  };\n}\n\nexport default class CanvasManager {\n  private canvas: CanvasOrNull;\n\n  private ctx: Context;\n\n  private width: number;\n\n  private height: number;\n\n  private padX = 0;\n\n  private padY = 0;\n\n  private gridSize = -1;\n\n  private cellSize = -1;\n\n  private playerRadius = -1;\n\n  constructor(canvas: CanvasOrNull) {\n    this.canvas = canvas;\n    const { context, height, width } = getContext(this.canvas);\n    this.ctx = context;\n    this.width = width;\n    this.height = height;\n  }\n\n  public refreshContext(): void {\n    const { context, height, width } = getContext(this.canvas);\n    this.ctx = context;\n    this.width = width;\n    this.height = height;\n  }\n\n  public clearCanvas = (): void => {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n  };\n\n  public drawGrid = (grid?: Cell[][]): void => {\n    if (!grid || !isValidGrid(grid)) throw new Error('Grid not valid');\n    this.initDimension(this.width, this.height, grid);\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    this.drawBoundary();\n    for (let r = 0; r < grid.length; r++) {\n      for (let c = 0; c < grid[0].length; c++) {\n        this.drawCell(grid[r][c], { r, c });\n      }\n    }\n  };\n\n  public drawIndicatorSquare = (cord: Cord): void => {\n    this.ctx.fillStyle = INDICATOR_COLOR;\n    this.drawSquare(cord);\n    this.ctx.fill();\n  };\n\n  public drawStartFinish = (maze: number[][]): void => {\n    this.ctx.fillStyle = START_COLOR;\n    this.drawSquare({ r: 0, c: 0 });\n    this.ctx.fill();\n    this.ctx.fillStyle = END_COLOR;\n    this.drawSquare({ r: maze.length - 1, c: maze.length - 1 });\n    this.ctx.fill();\n  };\n\n  public drawPlayer = (cord: Cord, color: string = DEFAULT_PLAYER_COLOR): void => {\n    this.ctx.fillStyle = color;\n    this.ctx.lineWidth = PLAYER_STOKE_WIDTH;\n    this.drawCircle(cord, this.playerRadius);\n    this.ctx.fill();\n    this.ctx.stroke();\n  };\n\n  private initDimension = (width: number, height: number, grid: Cell[][]): void => {\n    this.gridSize = Math.min(width, height) - 2 * PADDING;\n    this.cellSize = this.gridSize / grid.length;\n    this.playerRadius = this.cellSize * 0.1;\n    this.padY = (height - this.gridSize) / 2;\n    this.padX = (width - this.gridSize) / 2;\n  };\n\n  private drawCircle = (cord: Cord, radius: number): void => {\n    this.ctx.beginPath();\n    const x = this.cCord(cord.c);\n    const y = this.rCord(cord.r);\n    this.ctx.arc(x, y, radius, 0, TWO_PI);\n    this.ctx.closePath();\n  };\n\n  private drawSquare = (cord: Cord): void => {\n    const { r, c } = cord;\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.cCord(c) + 1, this.rCord(r) + 1);\n    this.ctx.lineTo(this.cCord(c + 1) - 1, this.rCord(r) + 1);\n    this.ctx.lineTo(this.cCord(c + 1) - 1, this.rCord(r + 1) - 1);\n    this.ctx.lineTo(this.cCord(c) + 1, this.rCord(r + 1) - 1);\n    this.ctx.closePath();\n  };\n\n  private rCord = (r: number) => {\n    return this.padY + r * this.cellSize;\n  };\n\n  private cCord = (c: number) => {\n    return this.padX + c * this.cellSize;\n  };\n\n  private drawBoundary = (): void => {\n    if (this.gridSize > 0) {\n      this.ctx.lineWidth = DEFAULT_STOKE_WIDTH;\n      this.ctx.strokeStyle = BORDER_COLOR;\n      this.ctx.beginPath();\n      this.ctx.moveTo(this.padX, this.padY);\n      this.ctx.lineTo(this.padX + this.gridSize, this.padY);\n      this.ctx.lineTo(this.padX + this.gridSize, this.padY + this.gridSize);\n      this.ctx.lineTo(this.padX, this.padY + this.gridSize);\n      this.ctx.closePath();\n      this.ctx.stroke();\n    }\n  };\n\n  private drawCell = (cell: Cell, cord: Cord): void => {\n    for (const dir of ALL_DIRS_ARR) {\n      if (hasDirection(cell, dir)) {\n        this.drawWall(cord, dir);\n      }\n    }\n  };\n\n  private drawWall = (cord: Cord, dir: Direction): void => {\n    const { r, c } = cord;\n    this.ctx.beginPath();\n    if (dir === Direction.TOP || dir === Direction.LEFT)\n      this.ctx.moveTo(this.cCord(c), this.rCord(r));\n    else this.ctx.moveTo(this.cCord(c + 1), this.rCord(r + 1));\n    if (dir === Direction.TOP || dir === Direction.RIGHT)\n      this.ctx.lineTo(this.cCord(c + 1), this.rCord(r));\n    else this.ctx.lineTo(this.cCord(c), this.rCord(r + 1));\n    this.ctx.closePath();\n    this.ctx.stroke();\n  };\n}\n","import React, { createRef, useEffect, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport Button from '../components/button';\nimport Canvas from '../components/canvas';\nimport Container from '../components/container';\nimport LabelInput from '../components/label-input';\nimport Nav from '../components/nav';\nimport CanvasManager, { getOnUpdate } from '../lib/canvas-manager';\nimport { generateMaze, getRandomSeed } from '../lib/maze-generator';\n\nfunction handleChange(callBack: React.Dispatch<string>, check: (nVal: number) => boolean) {\n  return (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    if (!value || check(parseInt(value, 10))) callBack(value);\n  };\n}\n\nfunction GenerationDemo(): JSX.Element {\n  const canvasRef: React.LegacyRef<HTMLCanvasElement> = createRef();\n\n  const [size, setSize] = useState('10');\n  const [delay, setDelay] = useState('30');\n  const [seed, setSeed] = useState(getRandomSeed().toString());\n  const [busy, setIsBusy] = useState(false);\n  const bigScreen = useMediaQuery({ query: '(min-width: 550px)' });\n  const [canvasSize, setCanvasSize] = useState(bigScreen ? 500 : 250);\n\n  useEffect(() => {\n    setCanvasSize(bigScreen ? 500 : 200);\n  }, [bigScreen]);\n\n  const onClick = async () => {\n    if (busy) return;\n    setIsBusy(true);\n    const canvas = canvasRef.current;\n    const canvasManager = new CanvasManager(canvas);\n    const onUpdate = getOnUpdate(canvasManager, parseInt(delay, 10));\n    const userSeed = parseInt(seed, 10);\n    const maze = await generateMaze(parseInt(size, 10), { onUpdate, userSeed });\n    canvasManager.drawGrid(maze);\n    setIsBusy(false);\n  };\n\n  const updateSize = handleChange(setSize, (n) => n <= 50);\n  const updateDelay = handleChange(setDelay, (d) => d < 400);\n  const updateSeed = handleChange(setSeed, (s) => s < 100000);\n\n  return (\n    <Container>\n      <h1 className=\"text-4xl my-4\">Generation Demo</h1>\n      <Nav />\n      <Canvas ref={canvasRef} size={canvasSize} />\n      <div className=\"flex flex-wrap gap-3 items-center place-content-center\">\n        <LabelInput label=\"Size\" value={size} onChange={updateSize} />\n        <LabelInput label=\"Delay\" value={delay} onChange={updateDelay} />\n        <LabelInput label=\"Seed\" value={seed} onChange={updateSeed} />\n        <Button color=\"bg-green-500\" onClick={onClick} label=\"Generate\" />\n      </div>\n    </Container>\n  );\n}\n\nexport default GenerationDemo;\n","import React, { createRef, useCallback, useEffect, useRef } from 'react';\nimport nipplejs, {\n  EventData,\n  JoystickManager,\n  JoystickManagerOptions,\n  JoystickOutputData\n} from 'nipplejs';\nimport { Control } from '../type';\n\nexport const JOY_STICK_CONFIG: JoystickManagerOptions = {\n  color: '#000000',\n  threshold: 0.1,\n  position: { top: '50%', left: '50%' },\n  mode: 'static',\n  dynamicPage: true\n};\n\nexport interface JoyStickProps {\n  size: number;\n  onEventHandler: (control: Control) => void;\n  offEventHandler: () => void;\n}\n\nconst JoyStick = (props: JoyStickProps): JSX.Element => {\n  const { size, onEventHandler, offEventHandler } = props;\n  const myContainer = createRef<HTMLDivElement>();\n  const manager = useRef<JoystickManager | null>(null);\n\n  const onEvent = useCallback(\n    (evt: EventData, data: JoystickOutputData): void => {\n      const control: Control = { magnitude: (data.distance / size) * 2, angle: data.angle.radian };\n      onEventHandler(control);\n    },\n    [onEventHandler, size]\n  );\n\n  useEffect(() => {\n    const config = JOY_STICK_CONFIG;\n    config.zone = myContainer.current as HTMLElement;\n    config.size = size;\n    manager.current = nipplejs.create(config);\n    manager.current.on('move', onEvent);\n    manager.current.on('end', offEventHandler);\n    return () => {\n      offEventHandler();\n      manager.current?.off('move', onEvent);\n      manager.current?.off('end', offEventHandler);\n      manager.current?.destroy();\n    };\n  }, [manager, size, onEvent, offEventHandler, myContainer]);\n\n  return (\n    <div\n      className=\"bg-white relative rounded-full\"\n      style={{ width: size + 5, height: size + 5 }}\n      ref={myContainer}\n    />\n  );\n};\n\nexport default JoyStick;\n","import CanvasManager from './canvas-manager';\nimport { generateMazeSync } from './maze-generator';\nimport { Cell, Cord, Direction, CanvasOrNull, Control } from '../type';\nimport { hasDirection } from './direction-util';\n\nconst START_POS: Cord = { r: 0.5, c: 0.5 };\nconst MARGIN = 0.1;\nconst MAX_SPEED = 0.05;\n\nexport default class Game {\n  private canvasManager: CanvasManager;\n\n  private level: number;\n\n  private maze: Cell[][];\n\n  private gridSize: number;\n\n  private position: Cord;\n\n  private seed?: number;\n\n  constructor(canvas: CanvasOrNull, level: number, seed?: number) {\n    this.seed = seed;\n    this.level = level;\n    this.gridSize = this.level + 5;\n    this.position = START_POS;\n    this.maze = generateMazeSync(this.gridSize, this.seed);\n    this.canvasManager = new CanvasManager(canvas);\n  }\n\n  public setLevel = (level: number): void => {\n    this.level = level;\n    this.gridSize += level + 5;\n    this.position = START_POS;\n    this.maze = generateMazeSync(this.gridSize, this.seed);\n    this.renderGame();\n  };\n\n  public getMaze = (): Cell[][] => {\n    return this.maze;\n  };\n\n  public getPosition = (): Cord => {\n    return this.position;\n  };\n\n  public performMove = (control: Control): void => {\n    const { magnitude, angle } = control;\n    let nr = this.position.r;\n    let nc = this.position.c;\n    nr += -MAX_SPEED * magnitude * Math.sin(angle);\n    nc += MAX_SPEED * magnitude * Math.cos(angle);\n    this.position = this.getBoundedCord(nr, nc);\n  };\n\n  private getBoundedCord = (nr: number, nc: number): Cord => {\n    const { r, c } = this.position;\n    const [tr, tc] = [Math.floor(r), Math.floor(c)];\n    const cell = this.maze[tr][tc];\n    if (hasDirection(cell, Direction.TOP)) nr = Math.max(tr + MARGIN, nr);\n    if (hasDirection(cell, Direction.DOWN)) nr = Math.min(tr + 1 - MARGIN, nr);\n    if (hasDirection(cell, Direction.LEFT)) nc = Math.max(tc + MARGIN, nc);\n    if (hasDirection(cell, Direction.RIGHT)) nc = Math.min(tc + 1 - MARGIN, nc);\n    return { r: nr, c: nc };\n  };\n\n  public checkWin = (): boolean => {\n    const dr = Math.abs(this.position.r - (this.gridSize - 0.5));\n    const dc = Math.abs(this.position.c - (this.gridSize - 0.5));\n    return dr <= 0.5 && dc <= 0.5;\n  };\n\n  public renderGame = (): void => {\n    this.canvasManager.refreshContext();\n    this.canvasManager.drawGrid(this.maze);\n    this.canvasManager.drawStartFinish(this.maze);\n    this.canvasManager.drawPlayer(this.position);\n  };\n}\n","import React, {\n  KeyboardEventHandler,\n  LegacyRef,\n  useCallback,\n  useEffect,\n  useRef,\n  useState\n} from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport Canvas from '../components/canvas';\nimport Container from '../components/container';\nimport JoyStick from '../components/joy-stick';\nimport Nav from '../components/nav';\nimport { IDLE_CONTROL } from '../constants';\nimport getControlFromDir, { addDir, removeDir } from '../lib/direction-util';\nimport Game from '../lib/game';\nimport { Control, Direction } from '../type';\n\ninterface StringMap {\n  [key: string]: number;\n}\n\nfunction getCanvasSize(bigScreen: boolean, midScreen: boolean): number {\n  if (bigScreen) return 500;\n  if (midScreen) return 350;\n  return 250;\n}\n\nconst KEY_MAP: StringMap = {\n  ArrowLeft: Direction.LEFT,\n  ArrowUp: Direction.TOP,\n  ArrowRight: Direction.RIGHT,\n  ArrowDown: Direction.DOWN\n};\n\nfunction Maze(): JSX.Element {\n  const [level, setLevel] = useState(1);\n  const canvasRef: LegacyRef<HTMLCanvasElement> = useRef(null);\n  const bigScreen = useMediaQuery({ query: '(min-width: 600px)' });\n  const midScreen = useMediaQuery({ query: '(min-width: 400px)' });\n  const [canvasSize, setCanvasSize] = useState(getCanvasSize(bigScreen, midScreen));\n  const game = useRef<Game>();\n  const animationRef = useRef(0);\n  const control = useRef<Control>(IDLE_CONTROL);\n  const keyDirs = useRef(0);\n\n  const animate: FrameRequestCallback = useCallback(() => {\n    game.current?.performMove(control.current);\n    game.current?.renderGame();\n    if (game.current?.checkWin()) {\n      setLevel(level + 1);\n    }\n    animationRef.current = requestAnimationFrame(animate);\n  }, [control, game, level]);\n\n  useEffect(() => {\n    setCanvasSize(getCanvasSize(bigScreen, midScreen));\n  }, [bigScreen, midScreen]);\n\n  useEffect(() => {\n    game.current = new Game(canvasRef.current, level);\n    animationRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(animationRef.current);\n  }, [level, animate]);\n\n  const onKeyDown: KeyboardEventHandler<HTMLDivElement> = (event) => {\n    const dir = KEY_MAP[event.key] || 0;\n    if (dir !== 0) event.preventDefault();\n    keyDirs.current = addDir(keyDirs.current, dir);\n    control.current = getControlFromDir(keyDirs.current);\n  };\n\n  const onKeyUp: KeyboardEventHandler<HTMLDivElement> = (event) => {\n    const dir = KEY_MAP[event.key] || 0;\n    if (dir !== 0) event.preventDefault();\n    keyDirs.current = removeDir(keyDirs.current, dir);\n    control.current = getControlFromDir(keyDirs.current);\n  };\n\n  const onEventHandler = useCallback((ctrl: Control): void => {\n    control.current = ctrl;\n  }, []);\n\n  const offEventHandler = useCallback((): void => {\n    control.current = IDLE_CONTROL;\n  }, []);\n\n  return (\n    <Container onKeyDown={onKeyDown} onKeyUp={onKeyUp}>\n      <h1 className=\"text-4xl my-4 text-center\">Offline Maze Level {level}</h1>\n      <Nav />\n      <Canvas ref={canvasRef} size={canvasSize} />\n      <JoyStick size={120} offEventHandler={offEventHandler} onEventHandler={onEventHandler} />\n    </Container>\n  );\n}\n\nexport default Maze;\n","import React from 'react';\nimport Container from '../components/container';\nimport Nav from '../components/nav';\n\nfunction MultiPlayerMaze(): JSX.Element {\n  return (\n    <Container>\n      <h1 className=\"text-4xl my-4\">Maze Multiplayer</h1>\n      <Nav />\n    </Container>\n  );\n}\n\nexport default MultiPlayerMaze;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport GenerationDemo from './pages/GenerateDemo';\nimport Maze from './pages/Maze';\nimport MultiPlayerMaze from './pages/MultiplayerMaze';\n\nfunction App(): JSX.Element {\n  return (\n    <Switch>\n      <Route exact path=\"/online\">\n        <MultiPlayerMaze />\n      </Route>\n      <Route exact path=\"/generator\">\n        <GenerationDemo />\n      </Route>\n      <Route>\n        <Maze />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}